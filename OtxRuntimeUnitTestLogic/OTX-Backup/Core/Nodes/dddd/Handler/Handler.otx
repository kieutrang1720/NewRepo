<?xml version="1.0" encoding="utf-8"?>
<otx xmlns="http://iso.org/OTX/1.0.0" xmlns:string="http://iso.org/OTX/1.0.0/StringUtil" xmlns:unittest="http://emotive.de/OTX/1.0.0/UnitTest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:assert="http://iso.org/OTX/1.0.0/Assertion" name="Handler" id="id_dd8636f5c57a4a0ab1163652987177fa" package="Core.Nodes.CompoundNodes.Handler" version="1.0.0.0" timestamp="2021-07-07T12:02:05.848+07:00">
  <metaData>
    <data key="MadeWith">Created by emotive Open Test Framework - www.emotive.de</data>
    <data key="OtfVersion">6.4.0.42010</data>
  </metaData>
  <extendedElement xsi:type="unittest:TestProcedures">
    <unittest:testProcedure name="Handler_01" id="TestProcedure_98596bbd9a414c198fa37e563b107609" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Integer1" id="VariableDeclaration_33deb6a48a634d56ad75d77991a8a358">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
          <variable name="String1" id="VariableDeclaration_47ed9f12d2234250888db61a20f52fc4">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <handler id="Handler_c4c118513e864fe697cb3a5cd8c26646">
            <realisation>
              <try>
                <action id="Action_bb487ed83cca4f16a50986b292442b8c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="IntegerVariable" name="Integer1" />
                    <term xsi:type="IntegerLiteral" value="0" />
                  </realisation>
                </action>
              </try>
              <catch>
                <exception id="CatchHeader_dde8462f57d74c1e8eae0f96c06413e3">
                  <realisation>
                    <type />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_4c7791eedfeb4b428bec9fd538e6cdb5">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="IntegerVariable" name="Integer1" />
                      <term xsi:type="Add">
                        <numeral xsi:type="IntegerValue" valueOf="Integer1" />
                        <numeral xsi:type="IntegerLiteral" value="1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <finally>
                <action id="Action_c9888efa60b644f1823992baa29e3c4a">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="StringVariable" name="String1" />
                    <term xsi:type="string:StringConcatenate">
                      <string:string xsi:type="ToString">
                        <term xsi:type="IntegerValue" valueOf="Integer1" />
                      </string:string>
                      <string:string xsi:type="StringLiteral" value=" Exception(s)" />
                    </term>
                  </realisation>
                </action>
              </finally>
            </realisation>
          </handler>
          <action id="Action_78c9042e96d442d9b8bb2ed6ad77c552">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="StringValue" valueOf="String1" />
                <term xsi:type="StringLiteral" value="0 Exception(s)" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_02" id="TestProcedure_2e65d5f956fb43989b7193073c072d9f" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Integer1" id="VariableDeclaration_ed644ae6f4ef4b7c89c9720ec739d9a6">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
          <variable name="String1" id="VariableDeclaration_e6dc465ecb7b489db4ccc4106cb6108a">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </variable>
          <variable name="Exception1" id="VariableDeclaration_e8ba0143690445d0b46c24687970f12e">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="Exception2" id="VariableDeclaration_ac328ccc9107435fa273157804e80736">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="String2" id="VariableDeclaration_1ecf2c426779426d92c7f4c4c5df07d9">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <handler id="Handler_fb6464a88ebb468586f5883adf63210f">
            <realisation>
              <try>
                <action id="Action_b622affd74c44ee7a46d88f2b28f9e49">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="IntegerVariable" name="Integer1" />
                    <term xsi:type="Divide">
                      <numeral xsi:type="IntegerLiteral" value="1" />
                      <divisor xsi:type="IntegerLiteral" value="0" />
                    </term>
                  </realisation>
                </action>
              </try>
              <catch>
                <exception id="CatchHeader_778c8cab06574e3aad165bd12448dbec">
                  <realisation>
                    <type xsi:type="OutOfBoundsException" />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_2b17643be5d84c87ab1e13cdef5ed966">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String1" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <catch>
                <exception id="CatchHeader_ff49589206a842d79f97be94a006a2f1">
                  <realisation>
                    <type xsi:type="ArithmeticException" />
                    <handle name="Exception2" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_ff6142776f9b477d990d3b8e818d8cac">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String2" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception2" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <catch>
                <exception id="CatchHeader_a9ba08f9e30e48738d5aed9151fe432b">
                  <realisation>
                    <type />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_d61a5174e9e14aa2be5513f47f1c2f7c">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String1" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
            </realisation>
          </handler>
          <action id="Action_eeda59c51a55449ab39a10262de724d7">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="LogicAnd">
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String1" />
                  <term xsi:type="StringLiteral" value="" />
                </term>
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String2" />
                  <term xsi:type="StringLiteral" value="ArithmeticException" />
                </term>
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_03" id="TestProcedure_7861db1198484316bad6e54739b3838a" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Exception1" id="VariableDeclaration_df92b88104af426fa4e773f15a864c27">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="Exception2" id="VariableDeclaration_4f6b7aaf111742d3af268a16f569e3f5">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="String1" id="VariableDeclaration_59cd5ef39ddf4cc4a6ba2c834420e88f">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </variable>
          <variable name="String2" id="VariableDeclaration_d1ce6235f5d04b108bdc0835be17ce56">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </variable>
          <variable name="UserException1" id="VariableDeclaration_6739f341ac864fb095eefedccca9c5d5">
            <realisation>
              <dataType xsi:type="UserException" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <handler id="Handler_29d1064975954946b6c990a1ab5d5133">
            <realisation>
              <try>
                <action id="Action_944a73367169447bb112e78d8aae3184">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="StringVariable" name="String1" />
                    <term xsi:type="GetExceptionText">
                      <exception xsi:type="ExceptionValue" valueOf="UserException1" />
                    </term>
                  </realisation>
                </action>
              </try>
              <catch>
                <exception id="CatchHeader_ec318b27cca54bdda040b2b943e17190">
                  <realisation>
                    <type xsi:type="OutOfBoundsException" />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_54352e7f2011449085dfba34b687424b">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String1" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <catch>
                <exception id="CatchHeader_110a98addf394703897d42f94b4dfc12">
                  <realisation>
                    <type xsi:type="InvalidReferenceException" />
                    <handle name="Exception2" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_cd99171e685c4161a58eb84ccc6843cf">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String2" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception2" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <catch>
                <exception id="CatchHeader_a138539fa64c4706801e34ad602f7091">
                  <realisation>
                    <type />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_40439394305d45e1993f71ef2a059fd1">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String1" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
            </realisation>
          </handler>
          <action id="Action_0edf24674ddf431c8c342d2b7a70d679">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="LogicAnd">
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String1" />
                  <term xsi:type="StringLiteral" value="" />
                </term>
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String2" />
                  <term xsi:type="StringLiteral" value="InvalidReferenceException" />
                </term>
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_04" id="TestProcedure_5b7309f9bb794ae49d2120621cb78c91" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Integer1" id="VariableDeclaration_fb699a9c1af14a3c9c6111273c46eaf2">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
          <variable name="String1" id="VariableDeclaration_83ccb543fb3a4ac19d1e00d076c53931">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
          <variable name="Exception1" id="VariableDeclaration_898287969a1f47b093697c47af230809">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="Exception2" id="VariableDeclaration_15f8c3d2f0ba402d942161e62df4aa4d">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="String2" id="VariableDeclaration_6669aae6047e4bb7bb86e0db99e46e16">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
          <variable name="String3" id="VariableDeclaration_8fe6f03321204a7f8a03a6ca35e9ea37">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
          <variable name="String4" id="VariableDeclaration_001d4356075b45918c44843eaffc541a">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_0a26709f2c694a26826151b4098e91e5">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String1" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <action id="Action_0c151932670249208367aad65f5a0aa1">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String2" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <action id="Action_af0c75e37efb40ad83d7aee96b06fa87">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String3" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <action id="Action_8c9173ad5a674824838d05d4a3cac427">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String4" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <handler id="Handler_cecbbb90e3fe4ce0a45b6087d65b999c">
            <realisation>
              <try>
                <handler id="Handler_ac5fff0ab8e7421680a15a7813805254">
                  <realisation>
                    <try>
                      <action id="Action_a65f90c23c5a48df9ff284f8a782f3f1">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="IntegerVariable" name="Integer1" />
                          <term xsi:type="Divide">
                            <numeral xsi:type="IntegerLiteral" value="1" />
                            <divisor xsi:type="IntegerLiteral" value="0" />
                          </term>
                        </realisation>
                      </action>
                    </try>
                    <catch>
                      <exception id="CatchHeader_ed3fcaf36bfe41718d2a454c2010b40f">
                        <realisation>
                          <type xsi:type="OutOfBoundsException" />
                          <handle name="Exception1" />
                        </realisation>
                      </exception>
                      <flow>
                        <action id="Action_34cde7dbbd0b466fb4222ef57c2b223d">
                          <realisation xsi:type="Assignment">
                            <result xsi:type="StringVariable" name="String1" />
                            <term xsi:type="GetExceptionQualifier">
                              <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                            </term>
                          </realisation>
                        </action>
                      </flow>
                    </catch>
                    <catch>
                      <exception id="CatchHeader_63f406edf09047e2ae1ef72f77766105">
                        <realisation>
                          <type xsi:type="AmbiguousCallException" />
                          <handle name="Exception1" />
                        </realisation>
                      </exception>
                      <flow>
                        <action id="Action_f1c4c5aacbfc44b59cc4ce7a5d15714c">
                          <realisation xsi:type="Assignment">
                            <result xsi:type="StringVariable" name="String2" />
                            <term xsi:type="GetExceptionQualifier">
                              <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                            </term>
                          </realisation>
                        </action>
                      </flow>
                    </catch>
                  </realisation>
                </handler>
              </try>
              <catch>
                <exception id="CatchHeader_4ef925e72dfb4d50bcdb58dd9728b297">
                  <realisation>
                    <type />
                    <handle name="Exception2" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_fb57a07307e84153a06b8cb738e4d646">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String3" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception2" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <catch>
                <exception id="CatchHeader_477da4e16ff248e28e3aee615a7ca6f0">
                  <realisation>
                    <type xsi:type="ArithmeticException" />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_cbb9742ba0094047a5fccd4f0b18cd08">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="StringVariable" name="String4" />
                      <term xsi:type="GetExceptionQualifier">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
            </realisation>
          </handler>
          <action id="Action_04b5abcc79bc4186974224c427ab09c9">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="LogicAnd">
                <term xsi:type="LogicAnd">
                  <term xsi:type="LogicAnd">
                    <term xsi:type="IsEqual">
                      <term xsi:type="StringValue" valueOf="String1" />
                      <term xsi:type="StringLiteral" value="" />
                    </term>
                    <term xsi:type="IsEqual">
                      <term xsi:type="StringValue" valueOf="String2" />
                      <term xsi:type="StringLiteral" value="" />
                    </term>
                  </term>
                  <term xsi:type="IsEqual">
                    <term xsi:type="StringValue" valueOf="String3" />
                    <term xsi:type="StringLiteral" value="ArithmeticException" />
                  </term>
                </term>
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String4" />
                  <term xsi:type="StringLiteral" value="" />
                </term>
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_05" id="TestProcedure_e0dd905e513645939badcd14daa97632" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Integer1" id="VariableDeclaration_6a0c22cc7db94301bc2b91b4b4eaf107">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
          <variable name="String1" id="VariableDeclaration_bc7eef457ad244e8971cfb4591b0fae6">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_a335415a10bd4fcb8b0a20104be34566">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String1" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <handler id="Handler_269922f3098e4cc0a5d220cd25f2e75c">
            <realisation>
              <try>
                <handler id="Handler_d6168784f3564b1eb9bc6f372629b027">
                  <realisation>
                    <try>
                      <action id="Action_140f00b2484943bc9cd3e08df5316721">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="IntegerVariable" name="Integer1" />
                          <term xsi:type="Divide">
                            <numeral xsi:type="IntegerLiteral" value="1" />
                            <divisor xsi:type="IntegerLiteral" value="0" />
                          </term>
                        </realisation>
                      </action>
                    </try>
                    <catch>
                      <exception id="CatchHeader_aefb6b2b534547ea98c05413415f734b">
                        <realisation>
                          <type xsi:type="ArithmeticException" />
                        </realisation>
                      </exception>
                      <flow>
                        <throw id="Throw_bac3b24fa3f64d1ca9e920e590a23ef0">
                          <realisation xsi:type="UserExceptionCreate">
                            <qualifier xsi:type="StringLiteral" value="UserException" />
                            <text xsi:type="StringLiteral" value="Throw an exception in the Catch branch." />
                          </realisation>
                        </throw>
                      </flow>
                    </catch>
                    <finally>
                      <action id="Action_bca92af7510c46af87cc63c9df3a1d48">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="StringVariable" name="String1" />
                          <term xsi:type="StringLiteral" value="Finally is always executed." />
                        </realisation>
                      </action>
                    </finally>
                  </realisation>
                </handler>
              </try>
              <catch>
                <exception id="CatchHeader_626f429cc06f44b7be9a5ce4aa9015b2">
                  <realisation>
                    <type />
                  </realisation>
                </exception>
                <flow />
              </catch>
            </realisation>
          </handler>
          <action id="Action_c7d2ceaca5994dc4a63b0b0eebdedaae">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="StringValue" valueOf="String1" />
                <term xsi:type="StringLiteral" value="Finally is always executed." />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_06" id="TestProcedure_c2c66ba46f1a4059b05ef2a4ad0007c5" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="String1" id="VariableDeclaration_b4a2aa54561a4ee9a43e41c481382acb">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
          <variable name="Counter1" id="VariableDeclaration_eae8010b40464a269cf9f350fe29e3f9">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_6d72c92272cb4c04b6b37cbb3ee1e30a">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String1" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <loop name="ForLoop1" id="Loop_e9407e49a35c42e5a6365d6ed33f26d7">
            <realisation>
              <configuration id="LoopConfigurationHeader_5a7992b72caa4aaea9b68cc02bce8712">
                <realisation xsi:type="ForLoop">
                  <counter name="Counter1" />
                  <start xsi:type="IntegerLiteral" value="0" />
                  <end xsi:type="IntegerLiteral" value="9" />
                </realisation>
              </configuration>
              <flow>
                <handler id="Handler_42d7b0337bd24c938ff86bba41797251">
                  <realisation>
                    <try>
                      <break id="Break_555f4eccc3b44c62b1586a65722e4882" />
                    </try>
                    <catch>
                      <exception id="CatchHeader_cc102d6cc7b64b3690ee3c659332e205">
                        <realisation>
                          <type />
                        </realisation>
                      </exception>
                      <flow>
                        <break id="Break_352a8be523aa48928510179336d48a7a" />
                      </flow>
                    </catch>
                    <finally>
                      <action id="Action_90557f1155eb45a6bd0812f16097eec0">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="StringVariable" name="String1" />
                          <term xsi:type="StringLiteral" value="Finally is always executed." />
                        </realisation>
                      </action>
                    </finally>
                  </realisation>
                </handler>
              </flow>
            </realisation>
          </loop>
          <action id="Action_124466a5f5c74a24896786b55f5d645e">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="LogicAnd">
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String1" />
                  <term xsi:type="StringLiteral" value="Finally is always executed." />
                </term>
                <term xsi:type="IsEqual">
                  <term xsi:type="IntegerValue" valueOf="Counter1" />
                  <term xsi:type="IntegerLiteral" value="0" />
                </term>
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_07" id="TestProcedure_5b75b0d077124e4982ac44476bd4efd2" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="String1" id="VariableDeclaration_07c44f607ad043f7a806c6e4d82513f1">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
          <variable name="Counter1" id="VariableDeclaration_0f1e8447646d4c15a1441a18c63f3462">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_898f880a346b4feb8d73ec2d82942f8d">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String1" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <loop name="ForLoop1" id="Loop_091fb17b1d85417c9dc413994487668d">
            <realisation>
              <configuration id="LoopConfigurationHeader_1d351b62dd964273991ccf8b51c244fb">
                <realisation xsi:type="ForLoop">
                  <counter name="Counter1" />
                  <start xsi:type="IntegerLiteral" value="0" />
                  <end xsi:type="IntegerLiteral" value="9" />
                </realisation>
              </configuration>
              <flow>
                <handler id="Handler_5fe45ae840b24741be5f7746130d6b42">
                  <realisation>
                    <try>
                      <branch id="Branch_23e3c3e756ef4dcd865dbc7098960bfa">
                        <realisation>
                          <if>
                            <condition id="ConditionHeader_895cad82ea844a33a618b737038b4ad7">
                              <realisation xsi:type="IsGreaterOrEqual">
                                <left xsi:type="IntegerValue" valueOf="Counter1" />
                                <right xsi:type="IntegerLiteral" value="0" />
                              </realisation>
                            </condition>
                            <flow>
                              <continue id="Continue_07f9851aefbf4c3285d373dc10037f5c" />
                            </flow>
                          </if>
                        </realisation>
                      </branch>
                      <action id="Action_3102eb6126034e50a4d66c500decfcc7">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="IntegerVariable" name="Counter1" />
                          <term xsi:type="IntegerLiteral" value="100" />
                        </realisation>
                      </action>
                    </try>
                    <catch>
                      <exception id="CatchHeader_20d044f37ab147f2b7e8d6a92260337e">
                        <realisation>
                          <type />
                        </realisation>
                      </exception>
                      <flow>
                        <branch id="Branch_f97690e1302b4f5889295e0a3b88f987">
                          <realisation>
                            <if>
                              <condition id="ConditionHeader_537d5a0f3dce4d6d9ab1905bafee2d27">
                                <realisation xsi:type="IsGreaterOrEqual">
                                  <left xsi:type="IntegerValue" valueOf="Counter1" />
                                  <right xsi:type="IntegerLiteral" value="0" />
                                </realisation>
                              </condition>
                              <flow>
                                <continue id="Continue_664d809d5e4142febc180b7783168e93" />
                              </flow>
                            </if>
                          </realisation>
                        </branch>
                        <action id="Action_77701f63db6440c384fc5acccf4e9763">
                          <realisation xsi:type="Assignment">
                            <result xsi:type="IntegerVariable" name="Counter1" />
                            <term xsi:type="IntegerLiteral" value="100" />
                          </realisation>
                        </action>
                      </flow>
                    </catch>
                    <finally>
                      <action id="Action_e3058ee072334e82bd99309686bf00b0">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="StringVariable" name="String1" />
                          <term xsi:type="StringLiteral" value="Finally is always executed." />
                        </realisation>
                      </action>
                    </finally>
                  </realisation>
                </handler>
              </flow>
            </realisation>
          </loop>
          <action id="Action_76b59de191ee405c95caab08861290a3">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="LogicAnd">
                <term xsi:type="IsEqual">
                  <term xsi:type="StringValue" valueOf="String1" />
                  <term xsi:type="StringLiteral" value="Finally is always executed." />
                </term>
                <term xsi:type="IsEqual">
                  <term xsi:type="IntegerValue" valueOf="Counter1" />
                  <term xsi:type="IntegerLiteral" value="10" />
                </term>
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_08" id="TestProcedure_bd714d3bd1e148a7a38f5d0a2ba24674" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="String1" id="VariableDeclaration_94b0024eccf34d2cb4cb49412c1c6526">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_fd34a6d141e8436d98cdd3746224fc0a">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="String1" />
              <term xsi:type="StringLiteral" value="" />
            </realisation>
          </action>
          <parallel id="Parallel_044d22bab96f408caebb504fb69365ac">
            <realisation>
              <lane />
              <lane>
                <handler id="Handler_f582d380594c46c284dd26fa8647c71c">
                  <realisation>
                    <try>
                      <terminateLanes id="TerminateLanes_a83c25b4942b41e5a43aa9126dfcf464" />
                    </try>
                    <catch>
                      <exception id="CatchHeader_bd6bf72a4d2846f19716927ae8e7f806">
                        <realisation>
                          <type />
                        </realisation>
                      </exception>
                      <flow>
                        <terminateLanes id="TerminateLanes_e7fab71cd163468780f997b481f5e665" />
                      </flow>
                    </catch>
                    <finally>
                      <action id="Action_33bbbe1d622f4085ae545ef0932dfdf5">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="StringVariable" name="String1" />
                          <term xsi:type="StringLiteral" value="Finally is always executed." />
                        </realisation>
                      </action>
                    </finally>
                  </realisation>
                </handler>
              </lane>
            </realisation>
          </parallel>
          <action id="Action_26cfd7d3b91a4081b1a6c8b97bb02f04">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="StringValue" valueOf="String1" />
                <term xsi:type="StringLiteral" value="Finally is always executed." />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="Handler_09" id="TestProcedure_64a1fac385744f4ca64270c65384f5fc" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="String1" id="VariableDeclaration_71f799ba25e94ea1b9e978fb108c5e39">
            <realisation>
              <dataType xsi:type="String">
                <init value="" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <parallel id="Parallel_9f7c710ca3874dd7bd72b772d9037dff">
            <realisation>
              <lane />
              <lane>
                <handler id="Handler_c3518b6a39604a3a96e668b2e01da213">
                  <realisation>
                    <try>
                      <terminateLanes id="TerminateLanes_e47e20cedd5c4ec29b335e6fb6a9db87" />
                    </try>
                    <catch>
                      <exception id="CatchHeader_e387588cc4c745feb4c8edf99ffcc3eb">
                        <realisation>
                          <type />
                        </realisation>
                      </exception>
                      <flow>
                        <terminateLanes id="Return_579259d34bd24639b608e5a195245a25" />
                      </flow>
                    </catch>
                    <finally>
                      <action id="Action_916cf50f083c4a0eab28e44822661486">
                        <realisation xsi:type="Assignment">
                          <result xsi:type="StringVariable" name="String1" />
                          <term xsi:type="StringLiteral" value="Finally is always executed." />
                        </realisation>
                      </action>
                      <terminateLanes id="Return_ad2267fd3ac54881be280fff6582927f" />
                    </finally>
                  </realisation>
                </handler>
              </lane>
            </realisation>
          </parallel>
          <action id="Action_ef51c74d20704b5499bea80a4c4bdbdf">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="StringValue" valueOf="String1" />
                <term xsi:type="StringLiteral" value="Finally is always executed." />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
  </extendedElement>
</otx>