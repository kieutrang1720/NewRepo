<?xml version="1.0" encoding="utf-8"?>
<otx xmlns="http://iso.org/OTX/1.0.0" xmlns:unittest="http://emotive.de/OTX/1.0.0/UnitTest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:log="http://iso.org/OTX/1.0.0/Logging" xmlns:assert="http://iso.org/OTX/1.0.0/Assertion" name="LogLevelVariable" id="id_cae3d8fd9f4e47ca9e9125a60cb7eef5" package="Logging.VariableAccess" version="1.0.0.0" timestamp="2021-08-11T16:05:09.915+07:00">
  <metaData>
    <data key="MadeWith">Created by emotive Open Test Framework - www.emotive.de</data>
    <data key="OtfVersion">6.4.0.42500</data>
  </metaData>
  <extendedElement xsi:type="unittest:TestProcedures">
    <unittest:testProcedure name="LogLevelVariable_Base" id="TestProcedure_76137232ca9d4a86992f433279607966" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_7861dfc695874d4e819d51708b06cfed">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ALL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_03f1b94ad9224d1d91a3a6212b44246f">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="DEBUG" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_f72974f035634a049c8ea8e6f7d64e7e">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ERROR" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_a48300a0833c4ae783d9e6bc2987e59a">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="FATAL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_fa83fc6b99284fe687a10ddd01111b8d">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="INFO" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_401e3e1dd3664b049cedc42462976d70">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="OFF" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_736edd20542440709a8d4c9e4519ac7f">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="TRACE" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_28a06fb6f38a42bd9cf96166f74c80c0">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="WARN" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="input" id="InParameterDeclaration_2c2e63bf0e89430c993cde76e3d69168">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </unittest:inParam>
        </unittest:parameters>
        <unittest:declarations>
          <variable name="Encoding1" id="VariableDeclaration_1aaee0dc07274c05aecf4ee3e14f47c5">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_5f4e0381ae0747f38458f007d116af9e">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Encoding1" />
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_28db63fc84d949bea5f05e195624d132">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Encoding1" />
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_75649ad0941e4070ae23d33c7383b6ef">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Encoding1" />
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelVariable_1Step" id="TestProcedure_a4e532d7171a4e439f0c22c905ff3025" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_948b82f2efbf420c9591a250b594d3c0">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ALL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_4746e3533fa549e2bb092efa77bbdcb1">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="DEBUG" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_7be217ab39734d24b75043a8304078e4">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ERROR" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_da915e79f68c4e38b1d92ca048204e39">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="FATAL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_b78c7cd560ff4e82a44b1e68bce90c66">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="INFO" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_b29000dd0c304a2680a4b3d7218f6fff">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="OFF" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_b106b40534e04ca9811d04fe53a2a3a5">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="TRACE" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_c1222148eaa3456fb77747d45fdc963b">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="WARN" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="input" id="InParameterDeclaration_09c5c49439df48f2aa783e7b59f4a6c6">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </unittest:inParam>
        </unittest:parameters>
        <unittest:declarations>
          <variable name="List1" id="VariableDeclaration_a9ef7985c0af4b47808b2335c3394a68">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="log:LogLevel" />
                <init>
                  <itemType xsi:type="log:LogLevel" />
                  <items>
                    <item xsi:type="log:LogLevelLiteral" value="ALL" />
                    <item xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    <item xsi:type="log:LogLevelLiteral" value="ERROR" />
                    <item xsi:type="log:LogLevelLiteral" value="FATAL" />
                    <item xsi:type="log:LogLevelLiteral" value="INFO" />
                    <item xsi:type="log:LogLevelLiteral" value="OFF" />
                    <item xsi:type="log:LogLevelLiteral" value="TRACE" />
                    <item xsi:type="log:LogLevelLiteral" value="WARN" />
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map0" id="VariableDeclaration_4e040233024b4991a182ca5a8b7aab1b">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="log:LogLevel" />
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="log:LogLevel" />
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="11" />
                      <value xsi:type="log:LogLevelLiteral" value="ALL" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="22" />
                      <value xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="33" />
                      <value xsi:type="log:LogLevelLiteral" value="ERROR" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="44" />
                      <value xsi:type="log:LogLevelLiteral" value="FATAL" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="55" />
                      <value xsi:type="log:LogLevelLiteral" value="INFO" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="66" />
                      <value xsi:type="log:LogLevelLiteral" value="OFF" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="77" />
                      <value xsi:type="log:LogLevelLiteral" value="TRACE" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="88" />
                      <value xsi:type="log:LogLevelLiteral" value="WARN" />
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_aa7e15b754c34745ad15e828dabae5ed">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="log:LogLevel" />
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="log:LogLevel" />
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="a" />
                      <value xsi:type="log:LogLevelLiteral" value="ALL" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="s" />
                      <value xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="d" />
                      <value xsi:type="log:LogLevelLiteral" value="ERROR" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="f" />
                      <value xsi:type="log:LogLevelLiteral" value="FATAL" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="g" />
                      <value xsi:type="log:LogLevelLiteral" value="INFO" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="h" />
                      <value xsi:type="log:LogLevelLiteral" value="OFF" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="j" />
                      <value xsi:type="log:LogLevelLiteral" value="TRACE" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="k" />
                      <value xsi:type="log:LogLevelLiteral" value="WARN" />
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_5b7fd10fa817476eab5e7c92a6968d18">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="List1">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="3" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_4348b92bf8144754a5873d0f5b6a3489">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map0">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="55" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_93dffec54b92435db499aa0b3d9882a5">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map1">
                <path>
                  <stepByName xsi:type="StringLiteral" value="g" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_c414639bccba4f958478d5b0c718346d">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="3" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_bd677e0a59784e5897bd1a9745112f30">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map0">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="55" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d63684d486144efa86b46f17548c8600">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="g" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_30f9cc3b404d4d43bb03f554f6b0491b">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_055d1c2e298f4ea19414b260adc50343">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9c7221963aa147cdb71b1f30196a434e">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_9cf17c27f0ae4843abe2acf412569545">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map0">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="10" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_b041e5e067fb4eaea3ce68ba08eb8ef9">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_906f57186bfb4c9a9b9dd95bffd61699">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="w" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelVariable_2Steps" id="TestProcedure_ae32f03b673e4185ab0e0c4509422f66" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_60d9c45395954b17835f23847cd6f6e7">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ALL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_172cbdaf835d4dbab4d9edfcabcd4ba6">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="DEBUG" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_6170358c6e234b489f9c8d8214a570b7">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ERROR" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_dc25aa8ce4064604a0f14442e2721654">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="FATAL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_634e41c0fcf04a848c73471a0cfbf173">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="INFO" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_b730e5ebb5174887ad21bf48879d45fb">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="OFF" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_2490f3eca9c445e085444d30dc9d257f">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="TRACE" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_3eb411b5dfe44a96a85569fb9e805214">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="WARN" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="input" id="InParameterDeclaration_2af26bd9e93b42a1b052803beb3f4e49">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </unittest:inParam>
        </unittest:parameters>
        <unittest:declarations>
          <variable name="List1" id="VariableDeclaration_3b99af1e3ebe4c64ae27b90f94d811c3">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="List">
                  <itemType xsi:type="log:LogLevel" />
                </itemType>
                <init>
                  <itemType xsi:type="List">
                    <itemType xsi:type="log:LogLevel" />
                  </itemType>
                  <items>
                    <item xsi:type="ListLiteral">
                      <itemType xsi:type="log:LogLevel" />
                      <items>
                        <item xsi:type="log:LogLevelLiteral" value="ALL" />
                      </items>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_dee2e9142df04927ace74cf803cc0041">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="log:LogLevel" />
                </valueType>
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="1" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="Integer" />
                        <valueType xsi:type="log:LogLevel" />
                        <items>
                          <item>
                            <key xsi:type="IntegerLiteral" value="5" />
                            <value xsi:type="log:LogLevelLiteral" value="ALL" />
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map2" id="VariableDeclaration_4d7fc6cddcfc49638d90b32976e6210a">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="String" />
                  <valueType xsi:type="log:LogLevel" />
                </valueType>
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="3" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="String" />
                        <valueType xsi:type="log:LogLevel" />
                        <items>
                          <item>
                            <key xsi:type="StringLiteral" value="9" />
                            <value xsi:type="log:LogLevelLiteral" value="ALL" />
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_7d017946b8ed4154b0e996051696f682">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="List1">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  <stepByIndex xsi:type="IntegerLiteral" value="0" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_9d318a28ec90431fa690c2e0f5c11069">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map1">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="1" />
                  <stepByIndex xsi:type="IntegerLiteral" value="5" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_abf1e41333c04bee90c2b29cb3df89a4">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map2">
                <path>
                  <stepByName xsi:type="StringLiteral" value="3" />
                  <stepByName xsi:type="StringLiteral" value="9" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_db8d63d793ad4579905bc71d9622ff39">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_bea820850caa4bad9080f6b233820394">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="1" />
                    <stepByIndex xsi:type="IntegerLiteral" value="5" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_74cded07403f42328939d81d7cf0d8b0">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map2">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="3" />
                    <stepByName xsi:type="StringLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_3fbd074141f94f998095d026acc32fe7">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_3ce5b0b6e0164b54af90140ebf008bb5">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_789ec8d0e4eb4ec5bfc15205bec069ef">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_718152636eaf46ccb4509aa437f974d5">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_e18e097901ec4d0da957836786170e9b">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_02616cb7b9164c35b48432a019b9b47a">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_c587003aeb2948399ac24f14aa612fdd">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_ae614429b19d49218c2062ca94c5ed49">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_20b2e40eecc340a7bfa085be393a8644">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_afd4734664a64dfdb90532cac053fb05">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9e4ddc640bf1471fa00d968a6c5b34d3">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_5e70a5eec54140b8b0e85062d941b8fd">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_95c3315f3e81482ab278ea3e8cf2e416">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_9199766a069a4796ade4a4e627f83a23">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_8e3cda9c74b64402b3fe70350f05152f">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_66a73f61956240039ccf0e73040c99f5">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="4" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_e0038a07227b40348e888c977de2c85d">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_6060768fc2c74d93bb68c8553f89ab10">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="4" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelVariable_3Steps" id="TestProcedure_ea3e1b4d00554a2087798ae0acee8394" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_d3df41d7e2b24a458e5fb6edb64cb0d4">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ALL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_03b97a79a9e84ba99a9fe9a1d89889c1">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="DEBUG" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_78662033ea4b4aa6a925ce60722b50a5">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="ERROR" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_c3d50967ac9644d3875d935575f57687">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="FATAL" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_a06ac86a93274bf285d4adbf045104fe">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="INFO" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_e876770a6e7b42f38d419caec91b08b6">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="OFF" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_1429eb3b60a24a1b97a41c9b6f554022">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="TRACE" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
          <unittest:testCase id="TestCase_a21c7a8066ca4e74be8ebefc24fbcc86">
            <unittest:arguments>
              <unittest:argument param="input">
                <unittest:value xsi:type="log:LogLevelLiteral" value="WARN" />
              </unittest:argument>
            </unittest:arguments>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="input" id="InParameterDeclaration_0284a3a842a440aa90f7b019c1d8312b">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </unittest:inParam>
        </unittest:parameters>
        <unittest:declarations>
          <variable name="List1" id="VariableDeclaration_bec4af0576d24e64aa6407a7e5a187b9">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="List">
                  <itemType xsi:type="List">
                    <itemType xsi:type="log:LogLevel" />
                  </itemType>
                </itemType>
                <init>
                  <itemType xsi:type="List">
                    <itemType xsi:type="List">
                      <itemType xsi:type="log:LogLevel" />
                    </itemType>
                  </itemType>
                  <items>
                    <item xsi:type="ListLiteral">
                      <itemType xsi:type="List">
                        <itemType xsi:type="log:LogLevel" />
                      </itemType>
                      <items>
                        <item xsi:type="ListLiteral">
                          <itemType xsi:type="log:LogLevel" />
                          <items>
                            <item xsi:type="log:LogLevelLiteral" value="ALL" />
                          </items>
                        </item>
                      </items>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_9b7ee56d800d44eda3a64692769e7d9c">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                </valueType>
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="Map">
                      <keyType xsi:type="Integer" />
                      <valueType xsi:type="log:LogLevel" />
                    </valueType>
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="1" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="Integer" />
                        <valueType xsi:type="Map">
                          <keyType xsi:type="Integer" />
                          <valueType xsi:type="log:LogLevel" />
                        </valueType>
                        <items>
                          <item>
                            <key xsi:type="IntegerLiteral" value="5" />
                            <value xsi:type="MapLiteral">
                              <keyType xsi:type="Integer" />
                              <valueType xsi:type="log:LogLevel" />
                              <items>
                                <item>
                                  <key xsi:type="IntegerLiteral" value="9" />
                                  <value xsi:type="log:LogLevelLiteral" value="ALL" />
                                </item>
                              </items>
                            </value>
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map2" id="VariableDeclaration_8bd08d3f182147628ee2f003fc9a3fa8">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                </valueType>
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="Map">
                      <keyType xsi:type="String" />
                      <valueType xsi:type="log:LogLevel" />
                    </valueType>
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="3" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="String" />
                        <valueType xsi:type="Map">
                          <keyType xsi:type="String" />
                          <valueType xsi:type="log:LogLevel" />
                        </valueType>
                        <items>
                          <item>
                            <key xsi:type="StringLiteral" value="6" />
                            <value xsi:type="MapLiteral">
                              <keyType xsi:type="String" />
                              <valueType xsi:type="log:LogLevel" />
                              <items>
                                <item>
                                  <key xsi:type="StringLiteral" value="9" />
                                  <value xsi:type="log:LogLevelLiteral" value="ALL" />
                                </item>
                              </items>
                            </value>
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_e905439d1e5e4dc0bfa4c944fba72f37">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="List1">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  <stepByIndex xsi:type="IntegerLiteral" value="0" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_ea299a463b1b412782d8e14904e8ea22">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map1">
                <path>
                  <stepByIndex xsi:type="IntegerLiteral" value="1" />
                  <stepByIndex xsi:type="IntegerLiteral" value="5" />
                  <stepByIndex xsi:type="IntegerLiteral" value="9" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_00a92461ba81401db904eeccf5890704">
            <realisation xsi:type="Assignment">
              <result xsi:type="log:LogLevelVariable" name="Map2">
                <path>
                  <stepByName xsi:type="StringLiteral" value="3" />
                  <stepByName xsi:type="StringLiteral" value="6" />
                  <stepByName xsi:type="StringLiteral" value="9" />
                </path>
              </result>
              <term xsi:type="log:LogLevelValue" valueOf="input" />
            </realisation>
          </action>
          <action id="Action_33ffe71b9648404296d2babc6de34b99">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_0ff7a1fdad4140c9ac427352660c180a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="1" />
                    <stepByIndex xsi:type="IntegerLiteral" value="5" />
                    <stepByIndex xsi:type="IntegerLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_e86d775bef0a40668ca6daeec304dfb9">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map2">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="3" />
                    <stepByName xsi:type="StringLiteral" value="6" />
                    <stepByName xsi:type="StringLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelValue" valueOf="input" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_eb7eaffaaf9a402990e7c877aa1f2a09">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_193571b9ab8342a1b576bee8a9757b48">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_e1498022e08a4ba78c5c39d5ac98387d">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_be13e8003a7d4a71945a19cfc6a54706">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_265590049dd74e008eb73ba62c9d19d1">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_24bf6590919d456598b6217cd4010d9a">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_6b0b47dfe9254dbf8baab7b10613dbe3">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_85de1b2f3b6c448299c5ac796f40427b">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_4ca0d4b517754274a98dd6b7b5bfa02a">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_8032f2827046483896ed554acb804f36">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_b726cd26251a4820b05b461c28903106">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_5db2c6bb92724d1fa6cd3e43182dd034">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_dad4a92562fe46dc8a753d020e72c32c">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_a19b171ae70c448886e8ea8f25fcfa4d">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="List1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_3a3a2ae5408e476bad2fb5c385fe2b67">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_b80291edbe954915b3ce1d2be7d76a4c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_254c06f2f41843fc8d5629b9c42f1290">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_6afc2c13b29d46298c389f5f213aa761">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_b07919a2bf1b45ffb0be650002254016">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_a00f369a8ca740a892b9f5d55a760940">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9d6f559a0e3e41e48fb59287dcb48c83">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_c8d84703e2e342b89f079c98a8e3f0cd">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_3ec7828a87014a0598732933c3a240b7">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_f68547d4baa5488e86714dd7671925ca">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_2e06cd80afad40e6b2621d1840cacd61">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_5722aa63af994a5189a365608a307542">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_18bbd5afe2cf4ae3868f7bb439ef9bbd">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_a802558568e24182b8b55f742d8ace30">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map1">
                      <path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_56b1d0c49ab5438fb0ce59a1453b31ab">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_59963c777b4e41ab9e3da7fbd0daf4f2">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="0" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_edd1ac25218d426b9e71fdca341c66bb">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_ed595853d5c84b31989dd9c79e6fc3b9">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_fc6f81d0dc084b5cab9638c82f066be4">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_2cf6b0eaa45f49afa83673fa6fed279b">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_1ddc4e49270546ab80b630c1ef8158ce">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_f36cd15fed1243d3bd68a6172b7dcf2b">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_5c92d10e78824b6888f2ff6da710728e">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_6d738ae3a5cb4093a108a5f62cdc65de">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_35c99fa737b64415a04befc566190f16">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_c37e3908e3f94eb8a0a5743295993dcd">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="Map2">
                      <path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </path>
                    </result>
                    <term xsi:type="log:LogLevelValue" valueOf="input" />
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
  </extendedElement>
</otx>