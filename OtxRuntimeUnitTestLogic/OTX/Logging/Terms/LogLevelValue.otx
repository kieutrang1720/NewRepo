<?xml version="1.0" encoding="utf-8"?>
<otx xmlns="http://iso.org/OTX/1.0.0" xmlns:unittest="http://emotive.de/OTX/1.0.0/UnitTest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:log="http://iso.org/OTX/1.0.0/Logging" xmlns:assert="http://iso.org/OTX/1.0.0/Assertion" name="LogLevelValue" id="id_20768866a2c04e3bb37b0ce705c22b5d" package="Logging.Terms" version="1.0.0.0" timestamp="2021-08-11T16:05:09.915+07:00">
  <metaData>
    <data key="MadeWith">Created by emotive Open Test Framework - www.emotive.de</data>
    <data key="OtfVersion">6.4.0.42500</data>
  </metaData>
  <extendedElement xsi:type="unittest:TestProcedures">
    <unittest:testProcedure name="LogLevelValue_Base" id="TestProcedure_ebe1dac006484b279aa6f9d2e50dd515">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="Encoding1" id="VariableDeclaration_e3aad007c1fb4a9ea77a8ff550617ab4">
            <realisation>
              <dataType xsi:type="log:LogLevel">
                <log:init value="FATAL" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_24573237d0f546119f4e288cecdf3910">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Encoding1" />
                <term xsi:type="log:LogLevelLiteral" value="FATAL" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelValue_1Step" id="TestProcedure_6fb4dec1b3004bf89884df672c451cb6" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="LogLevel1" id="VariableDeclaration_3326b8f71aa64c4884cf7183a56a4adc">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_1de0dea87e544311a1ad0f4da38471de">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="log:LogLevel" />
                <init>
                  <itemType xsi:type="log:LogLevel" />
                  <items>
                    <item xsi:type="log:LogLevelLiteral" value="ALL" />
                    <item xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    <item xsi:type="log:LogLevelLiteral" value="ERROR" />
                    <item xsi:type="log:LogLevelLiteral" value="FATAL" />
                    <item xsi:type="log:LogLevelLiteral" value="INFO" />
                    <item xsi:type="log:LogLevelLiteral" value="OFF" />
                    <item xsi:type="log:LogLevelLiteral" value="TRACE" />
                    <item xsi:type="log:LogLevelLiteral" value="WARN" />
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map0" id="VariableDeclaration_59dd17fa550b4633b16c42e72530e019">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="log:LogLevel" />
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="log:LogLevel" />
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="11" />
                      <value xsi:type="log:LogLevelLiteral" value="ALL" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="22" />
                      <value xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="33" />
                      <value xsi:type="log:LogLevelLiteral" value="ERROR" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="44" />
                      <value xsi:type="log:LogLevelLiteral" value="FATAL" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="55" />
                      <value xsi:type="log:LogLevelLiteral" value="INFO" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="66" />
                      <value xsi:type="log:LogLevelLiteral" value="OFF" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="77" />
                      <value xsi:type="log:LogLevelLiteral" value="TRACE" />
                    </item>
                    <item>
                      <key xsi:type="IntegerLiteral" value="88" />
                      <value xsi:type="log:LogLevelLiteral" value="WARN" />
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_ef20bb14ea7140a9859524b66c9c1cdd">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="log:LogLevel" />
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="log:LogLevel" />
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="a" />
                      <value xsi:type="log:LogLevelLiteral" value="ALL" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="s" />
                      <value xsi:type="log:LogLevelLiteral" value="DEBUG" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="d" />
                      <value xsi:type="log:LogLevelLiteral" value="ERROR" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="f" />
                      <value xsi:type="log:LogLevelLiteral" value="FATAL" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="g" />
                      <value xsi:type="log:LogLevelLiteral" value="INFO" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="h" />
                      <value xsi:type="log:LogLevelLiteral" value="OFF" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="j" />
                      <value xsi:type="log:LogLevelLiteral" value="TRACE" />
                    </item>
                    <item>
                      <key xsi:type="StringLiteral" value="k" />
                      <value xsi:type="log:LogLevelLiteral" value="WARN" />
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_5db70e51062f4700829fba48d317b358">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="3" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="FATAL" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_7c36b49dfe0446e39970a1d942191624">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map0">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="55" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="INFO" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_3f60355910bd4013b8c937027d022649">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="g" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="INFO" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_b9a8c4c161d14f139bebcc07d3a5fdfb">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_5ec7d417631d40abae0c6e84d5bc4529">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9c35dd4a4689482ebdf8f497274a6376">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_88024897c7614799996f05d3208a4a65">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map0">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="10" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_46ed9d3b3f5d47cab65173d16bb09fd4">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_72ba2c612e884485bead3950aa542f1c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="w" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelValue_2Steps" id="TestProcedure_a1ca177a0a0f43c39ac7a86397eb1743" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="LogLevel1" id="VariableDeclaration_d3ee3e762ff745aab6d2f9a1dbffdb3d">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_15a05506094c4f93871214a2f3683735">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="List">
                  <itemType xsi:type="log:LogLevel" />
                </itemType>
                <init>
                  <itemType xsi:type="List">
                    <itemType xsi:type="log:LogLevel" />
                  </itemType>
                  <items>
                    <item xsi:type="ListLiteral">
                      <itemType xsi:type="log:LogLevel" />
                      <items>
                        <item xsi:type="log:LogLevelLiteral" value="ALL" />
                      </items>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_6757d361ade449aca0e68e1420ccd84b">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="log:LogLevel" />
                </valueType>
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="1" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="Integer" />
                        <valueType xsi:type="log:LogLevel" />
                        <items>
                          <item>
                            <key xsi:type="IntegerLiteral" value="5" />
                            <value xsi:type="log:LogLevelLiteral" value="ERROR" />
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map2" id="VariableDeclaration_ffb31540034e41d2a6ffde155c48b858">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="String" />
                  <valueType xsi:type="log:LogLevel" />
                </valueType>
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="3" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="String" />
                        <valueType xsi:type="log:LogLevel" />
                        <items>
                          <item>
                            <key xsi:type="StringLiteral" value="9" />
                            <value xsi:type="log:LogLevelLiteral" value="OFF" />
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_51a2f3b80fb84f3d8db7c48fa48b8167">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="ALL" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_5b8ccdcd61d54245bd81568c981e6707">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="1" />
                    <stepByIndex xsi:type="IntegerLiteral" value="5" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="ERROR" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_faa6a3f17d06419fb52d9fb6e3909c3d">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map2">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="3" />
                    <stepByName xsi:type="StringLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="OFF" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_df4234ae9f744f5682946556e4df37c1">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_a4de2589ad34418392505f527d28a705">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_b84137b3fde64be2b40dc744ecc41df4">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_be2e1fba742043c1af986b7a0c457fbd">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9487ff7bfe26479b93e17196a360d1aa">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_aa6e10dd81e3492e862b79357e1fbd8c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_cc6933a7adf240799e73ed4569d62e34">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_389d7e5c123c4513a06bc93c78db3133">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_54c6b86c890b435d99d71ba0205c5d33">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_cc7e7368b4514461ab8dacf8f099f42c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_9155d48b9e56420db9c35d4a5e7ec519">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_027fca43f8e84026bfc3c25da56e6154">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_e3be564745da4380b827c3a3112c242d">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_0c800aa68d7c4e9d8e70ffee933caea0">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_56cb25b04cef40f3bde4c06e60ea8df3">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_003477b206ce41a0a0dbb33c03091b19">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="4" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_c918760fe64c4dfbad0fab8a4fe7f67d">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_44eb2a8233754bd0af2f3f7da245c529">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="4" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="LogLevelValue_3Steps" id="TestProcedure_a3cb2bc5a366456d80a54a521388195c" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="LogLevel1" id="VariableDeclaration_ff3c1bcf5630486c8c766949c97abfbc">
            <realisation>
              <dataType xsi:type="log:LogLevel" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_5e054d96b1e94f6ab154c051f694430c">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="List">
                  <itemType xsi:type="List">
                    <itemType xsi:type="log:LogLevel" />
                  </itemType>
                </itemType>
                <init>
                  <itemType xsi:type="List">
                    <itemType xsi:type="List">
                      <itemType xsi:type="log:LogLevel" />
                    </itemType>
                  </itemType>
                  <items>
                    <item xsi:type="ListLiteral">
                      <itemType xsi:type="List">
                        <itemType xsi:type="log:LogLevel" />
                      </itemType>
                      <items>
                        <item xsi:type="ListLiteral">
                          <itemType xsi:type="log:LogLevel" />
                          <items>
                            <item xsi:type="log:LogLevelLiteral" value="ERROR" />
                          </items>
                        </item>
                      </items>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map1" id="VariableDeclaration_8da224c591f044bd87195339ede85239">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="Integer" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                </valueType>
                <init>
                  <keyType xsi:type="Integer" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="Integer" />
                    <valueType xsi:type="Map">
                      <keyType xsi:type="Integer" />
                      <valueType xsi:type="log:LogLevel" />
                    </valueType>
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="IntegerLiteral" value="1" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="Integer" />
                        <valueType xsi:type="Map">
                          <keyType xsi:type="Integer" />
                          <valueType xsi:type="log:LogLevel" />
                        </valueType>
                        <items>
                          <item>
                            <key xsi:type="IntegerLiteral" value="5" />
                            <value xsi:type="MapLiteral">
                              <keyType xsi:type="Integer" />
                              <valueType xsi:type="log:LogLevel" />
                              <items>
                                <item>
                                  <key xsi:type="IntegerLiteral" value="9" />
                                  <value xsi:type="log:LogLevelLiteral" value="FATAL" />
                                </item>
                              </items>
                            </value>
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
          <variable name="Map2" id="VariableDeclaration_c924d6130e3a4c53a7741dfc901f7834">
            <realisation>
              <dataType xsi:type="Map">
                <keyType xsi:type="String" />
                <valueType xsi:type="Map">
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="log:LogLevel" />
                  </valueType>
                </valueType>
                <init>
                  <keyType xsi:type="String" />
                  <valueType xsi:type="Map">
                    <keyType xsi:type="String" />
                    <valueType xsi:type="Map">
                      <keyType xsi:type="String" />
                      <valueType xsi:type="log:LogLevel" />
                    </valueType>
                  </valueType>
                  <items>
                    <item>
                      <key xsi:type="StringLiteral" value="3" />
                      <value xsi:type="MapLiteral">
                        <keyType xsi:type="String" />
                        <valueType xsi:type="Map">
                          <keyType xsi:type="String" />
                          <valueType xsi:type="log:LogLevel" />
                        </valueType>
                        <items>
                          <item>
                            <key xsi:type="StringLiteral" value="6" />
                            <value xsi:type="MapLiteral">
                              <keyType xsi:type="String" />
                              <valueType xsi:type="log:LogLevel" />
                              <items>
                                <item>
                                  <key xsi:type="StringLiteral" value="9" />
                                  <value xsi:type="log:LogLevelLiteral" value="TRACE" />
                                </item>
                              </items>
                            </value>
                          </item>
                        </items>
                      </value>
                    </item>
                  </items>
                </init>
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_eadf2c43c2db468e979f5a41f6282bc3">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="List1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                    <stepByIndex xsi:type="IntegerLiteral" value="0" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="ERROR" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_a245026a674448a9a1c8e3ec899e284a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map1">
                  <log:path>
                    <stepByIndex xsi:type="IntegerLiteral" value="1" />
                    <stepByIndex xsi:type="IntegerLiteral" value="5" />
                    <stepByIndex xsi:type="IntegerLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="FATAL" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_74c8c3a49b774780b409a1371f593db9">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="log:LogLevelValue" valueOf="Map2">
                  <log:path>
                    <stepByName xsi:type="StringLiteral" value="3" />
                    <stepByName xsi:type="StringLiteral" value="6" />
                    <stepByName xsi:type="StringLiteral" value="9" />
                  </log:path>
                </term>
                <term xsi:type="log:LogLevelLiteral" value="TRACE" />
              </assert:condition>
            </realisation>
          </action>
          <compoundNode id="ExtensibleCompoundNode_8377aa4c4a7d4f3285dde15196a42935">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_3469d32ecde74a44959db4678298c1d3">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_59d2a533f11a47b1be15400cba5dbc2b">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_0ac51a14415040d5ba5d6b0b07c487f5">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_bc642f95a6814a7c9acd8821a5abd501">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_1c28428d3cf048eab1c637c4514a56e9">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_b45d23dc93444ee5aee26bfa8d01c456">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_733ae33bee0749ae82bdd18c1a6ef992">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_a2f23390809f4bb794bdf6dfc541861a">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_d119f1a4118a4cd593274ced43eacce0">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_706cfdb1bc794296809f58a1fdd97956">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_871f941717d04e1887fd29860c5812dc">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_72ec654738de42e78427d081a114847e">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_df5954d4e16b4957a7803ebcd9f87918">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="List1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_dc18ada1f05b4b0aa90a0602e1ca22bc">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_b4454c067094450595ac9f9f19535aa3">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_327ea58e2e80420886637070e2f29e01">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_78a257fa417848ec96c03d990db61eb4">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_5293aea6c6c0481da8f67aa1efb199eb">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_1c7d6d6d5e36408ca4c5aefd019bea28">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_e19fad0f03244dd3bb7b5fba61c78237">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_7d90d1ba175149bbaac487b65c1b085f">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_3743a503d8b44e9fa20b2b90a243b706">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_1ac9afb3d236402c942bffcde330d465">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="5" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_3cfb422ad4814a1dbc72785bb778927a">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_b29af26cd083411598ddb95d8f86575b">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="1" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_2b9d43d3c6524a2fa85d7e66389f0693">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_1c28c3082f484b45b90c92e121342415">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map1">
                      <log:path>
                        <stepByIndex xsi:type="IntegerLiteral" value="0" />
                        <stepByIndex xsi:type="IntegerLiteral" value="4" />
                        <stepByIndex xsi:type="IntegerLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_8d67f3c4be3440d483f9d8f59582f42d">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_ba17c0ea1b1d430fbf2c3246531398ba">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="0" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_d9cc90bb45c246abaf260eb4c8a34b32">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_02cde8cf2d324a60867934b399da7035">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_60b499a02f7847ff9a2ad981af7302c3">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_76a4d3c7866a48d88d8dfbd5375cef17">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="3" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_5b9cb017ecf64733b2c6e6b3c3f9231b">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_2f180c263223472d92f300700b9c8b21">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_83743f07f39c4702a514ccc066f18938">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_42695e9b764c4105a37e151d32e58ebd">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="6" />
                        <stepByName xsi:type="StringLiteral" value="8" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
          <compoundNode id="ExtensibleCompoundNode_3bfbf4a623c745b3bf6583ff1aacebc2">
            <realisation xsi:type="unittest:AssertThrows">
              <unittest:exception xsi:type="OutOfBoundsException" />
              <unittest:flow>
                <action id="Action_c61c5d9b00834b8b8a2f437e4ed5a797">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="log:LogLevelVariable" name="LogLevel1" />
                    <term xsi:type="log:LogLevelValue" valueOf="Map2">
                      <log:path>
                        <stepByName xsi:type="StringLiteral" value="2" />
                        <stepByName xsi:type="StringLiteral" value="5" />
                        <stepByName xsi:type="StringLiteral" value="9" />
                      </log:path>
                    </term>
                  </realisation>
                </action>
              </unittest:flow>
            </realisation>
          </compoundNode>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
  </extendedElement>
</otx>