<?xml version="1.0" encoding="utf-8"?>
<otx xmlns="http://iso.org/OTX/1.0.0" xmlns:diag="http://iso.org/OTX/1.0.0/DiagCom" xmlns:unittest="http://emotive.de/OTX/1.0.0/UnitTest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:assert="http://iso.org/OTX/1.0.0/Assertion" name="ResultState" id="id_bd3d23ae055f4151b7e61e0f7edf9366" package="DiagCom.DataTypes" version="1.0.0.0" timestamp="2021-08-12T13:41:43.666+07:00">
  <metaData>
    <data key="MadeWith">Created by emotive Open Test Framework - www.emotive.de</data>
    <data key="OtfVersion">6.4.0.42500</data>
  </metaData>
  <imports>
    <import package="DiagCom" document="GlobalVariable" prefix="Import1" />
  </imports>
  <extendedElement xsi:type="unittest:TestProcedures">
    <unittest:testProcedure name="ResultState_Base" id="TestProcedure_6e986474bd214acc8791fddf3b2ae1be" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="ResultState1" id="VariableDeclaration_a329ce5cb33a488aa25c7dc393c57d56">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="ALL_FAILED" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState2" id="VariableDeclaration_5587a3e1ec3743fbae500a03a6dfde51">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="ALL_INVALID" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState3" id="VariableDeclaration_ec3c0bf520614dc2898875aa9b75a925">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="ALL_NEGATIVE" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState4" id="VariableDeclaration_5ec20cd8dfac45bcb11a9ce3e892bad9">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="ALL_POSITIVE" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState5" id="VariableDeclaration_8566bec527394d5b9c6f9d124527caf4">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="FAILED" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState6" id="VariableDeclaration_d33846e75de84c32b663a59815b78515">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="INVALID" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState7" id="VariableDeclaration_13a6f6a954784516bc702e775792b6ea">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="NEGATIVE" />
              </dataType>
            </realisation>
          </variable>
          <variable name="ResultState8" id="VariableDeclaration_b251261e329f401dbff9fd6d3efedc04">
            <realisation>
              <dataType xsi:type="diag:ResultState">
                <diag:init value="POSITIVE" />
              </dataType>
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_c48c8581fb204cfca057aa0f0534a1ae">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState1" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_a228bcf52e88477a8e4848856617e1ce">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState2" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_124fccf65f21441d8f52402182449003">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState3" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_0ef69c7d2ece46d4b56fc96840b1e113">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState4" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_7bd6e90d64af437fa1ce11a873b9b4d0">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState5" />
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_4e5a6328d1984998b67cf571791c4f3d">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState6" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_1ca5ed86615a4784b734f5cb81a3c670">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState7" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_838eccc196b44938b1ea82763fbedf01">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState8" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="ResultState_Comparsion" id="TestProcedure_f9d0e4119bd74239a9b31a31adb593b2" parallelizable="true">
      <unittest:realisation>
        <unittest:flow>
          <action id="Action_5419e38b275a413f8a178ed5475b4a87">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_91fe10dde4ca4d8c896dfe2c75f75378">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_532ad08643304d2da8e1be5c38bf01e9">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_05953b7f97bd4a4eb266da1408bf4b96">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d8ad3ddabc3a48a0a3a1033262906c24">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_380fc4a08b9f4901bb10fed6fa618ca3">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_8eb6d537a6cb4515936fe2a26914807a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLess">
                <left xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_a537481be7f745d48e2355c8475df8e7">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_3f733aeb32e040ff853f911f22f91274">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d9f8a568e6504988ab9542d4f0b4cced">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_097cc3582bc14f24b958275cdd2b7bae">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_b6f723b768174b3aa709b61e4209f40c">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_467a71609ee54d0e8790bb985bf53ac4">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_8f0e678b59d3463499a49418d95cf60f">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsLessOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_41ddd5f3aeb143e19d1ad46e911b99a3">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d8b1ff82bb4848b199be025e32f15ca8">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_91d693fcc58340f8a1e34467714b05ec">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_85ee58558c864d92a50b80f4da9459e8">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c83fceae670d4e54b9a283edde0e84a8">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_96e50221bd1f409b971bb3f110e71e0d">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_3267f37c50a94d0b84cae01f312b143a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreater">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_bc1f567601fc49b79945733b5eef0971">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_11ed9d2b215f4753ac3c668760880f21">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_b6e4a20f2b5341e8bc00ccc29dd2212c">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_fa83deb7e4f846c69072c71527ebe549">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_5013f6d362294ad3acd0c0a8b506699a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_514e3b21f1ec4d1483c9bf1992c5d0ef">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_a57da5d755a14f22aa695afa12e1605e">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsGreaterOrEqual">
                <left xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <right xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_b816091f56a9494aa8aa6ae581a46e73">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_a2137b66acd342c8944406228f4dc7dd">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_ad55c13f494b45f7be5b0a4df3223b2a">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_3c26aac857f146b090f852d72c2fbed2">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c4f2397cec7440e4a370979f95713164">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_710ba6760c614a2b8fec5461821d7a5c">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_4e044f5e6cd248a4ae1be9a39bd6b132">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c649055c9e204506a426bc0ace971429">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d447d269f8804062ad7d6a94b28def56">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_94e98118957147b4ac29ff2c2809f390">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c41f8fd44cc9477d921b1a042d11de93">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_33d64c39195a4a35945cba68722aba18">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_d102795b1381469889188e46e269855f">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_44ba868e45694e9cb6e386ce23a9a3f8">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_dc4efeab542d4fa4890dd26470fc4f0f">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_66f7b4e240c640c991c6747be2c5c523">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_8e212770878741cbbed387f0de8c63cc">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c53c90df803f4ca4acae77a455451aba">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_230af5107b014502a6e0ccf822062952">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_db06a91680a047bfbc66defddf142a20">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_5feedc37151b47888d7f81756474a399">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_164bfdbe3dbe4cd89471a7d2308b4f47">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_c7940a9333654bbab935f4f078c5e4f5">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_beb2cc226b29459dac55b7a294910237">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_afe3660b35504ac7bf199f4539231343">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="FAILED" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_afe34116d6114de1a972dd24b37e0462">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_b91a97b1359c422a8828e3c1025d37ed">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="INVALID" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
          <action id="Action_ab1f71c13b9749e881d8252581f3fde0">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsNotEqual">
                <term xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
                <term xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="ResultState_ToInteger" id="TestProcedure_e43e8e9f7d9c4f5889e9a4efc2bcb517" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_9950f32afc554844b162b2349b578ac0">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="0" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_3aefc711a7f047b1abb7fda12eac122d">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="1" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_1d91ea13bd5b4dab80d3ce3699257694">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="2" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_ad572a2a7db546f88d448a073e01eb21">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="3" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_d2c54bfab6244665900e19523f969c96">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="4" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_ab5fe7f2374f4654b5a2e8fe1dcc220d">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="5" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_61e04dcafe6949a89fa5112e5a321789">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="6" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_61348d974797443db54abb4bd1de44fa">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="IntegerLiteral" value="7" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="_term" id="InParameterDeclaration_8434b6acbfea4d538c91e7434da31c4e">
            <realisation>
              <dataType xsi:type="diag:ResultState" />
            </realisation>
          </unittest:inParam>
          <unittest:outParam name="result" id="OutParameterDeclaration_855651c780844337917905c0a6db83b3">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </unittest:outParam>
        </unittest:parameters>
        <unittest:flow>
          <action id="Action_f53b3eab1ece4b32bbc86d1ddd6bc983">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="result" />
              <term xsi:type="ToInteger">
                <term xsi:type="diag:ResultStateValue" valueOf="_term" />
              </term>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="ResultState_ToString" id="TestProcedure_6965453d1ec24c299efff506fc148fd5" parallelizable="true">
      <unittest:realisation>
        <unittest:testCases>
          <unittest:testCase id="TestCase_fb7aa81f7f0f4e14abcdf54371ef84fb">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="ALL_FAILED" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_72bf24dfd6214a4d90d58081104a3f5b">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_INVALID" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="ALL_INVALID" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_64457781b84e44c4986e09e1581a0fa0">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_NEGATIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="ALL_NEGATIVE" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_2576f4332601404686f664630d875674">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="ALL_POSITIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="ALL_POSITIVE" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_db9500c1ffa042d4b44d6e8ae458fac7">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="FAILED" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="FAILED" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_b8358ae9adbb433ea8db56d4363df239">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="INVALID" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="INVALID" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_39275ec4f5e6453fb8573eef7bb8fa0e">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="NEGATIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="NEGATIVE" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
          <unittest:testCase id="TestCase_2118d3336a6f4f56a5ae9a8c95d797f1">
            <unittest:arguments>
              <unittest:argument param="_term">
                <unittest:value xsi:type="diag:ResultStateLiteral" value="POSITIVE" />
              </unittest:argument>
            </unittest:arguments>
            <unittest:expectedResults>
              <unittest:expectedResult param="result">
                <unittest:value xsi:type="StringLiteral" value="POSITIVE" />
              </unittest:expectedResult>
            </unittest:expectedResults>
          </unittest:testCase>
        </unittest:testCases>
        <unittest:parameters>
          <unittest:inParam name="_term" id="InParameterDeclaration_09c45ec348474b75b3d46b75c519e5c5">
            <realisation>
              <dataType xsi:type="diag:ResultState" />
            </realisation>
          </unittest:inParam>
          <unittest:outParam name="result" id="OutParameterDeclaration_9ec34f6cd21744c3aba41881e8513f88">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </unittest:outParam>
        </unittest:parameters>
        <unittest:flow>
          <action id="Action_ca4ef9dab00c43efa74236563372b4f0">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="result" />
              <term xsi:type="ToString">
                <term xsi:type="diag:ResultStateValue" valueOf="_term" />
              </term>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
    <unittest:testProcedure name="ResultState_DefaultValue" id="TestProcedure_f187de7f51a34e6d856e04f309ccb657" parallelizable="true">
      <unittest:realisation>
        <unittest:declarations>
          <variable name="ResultState1" id="VariableDeclaration_c3ab0ac7dbb04bf5bc635c69b7ff1fb3">
            <realisation>
              <dataType xsi:type="diag:ResultState" />
            </realisation>
          </variable>
        </unittest:declarations>
        <unittest:flow>
          <action id="Action_4e917e06ee1b43259f8ed404a6982a6b">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="IsEqual">
                <term xsi:type="diag:ResultStateValue" valueOf="ResultState1" />
                <term xsi:type="diag:ResultStateLiteral" value="ALL_FAILED" />
              </assert:condition>
            </realisation>
          </action>
        </unittest:flow>
      </unittest:realisation>
    </unittest:testProcedure>
  </extendedElement>
</otx>