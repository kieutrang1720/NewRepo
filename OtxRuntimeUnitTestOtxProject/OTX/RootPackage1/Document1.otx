<?xml version="1.0" encoding="utf-8"?>
<otx xmlns="http://iso.org/OTX/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:assert="http://iso.org/OTX/1.0.0/Assertion" xmlns:event="http://iso.org/OTX/1.0.0/Event" xmlns:util="http://iso.org/OTX/1.0.0/Util" name="Document1" id="id_f0777abed9e24bbd98f1d57ba74e2ebb" package="RootPackage1" version="1.0.0.41626" timestamp="2021-05-05T23:17:45.542+07:00">
  <metaData>
    <data key="MadeWith">Created by emotive Open Test Framework - www.emotive.de</data>
    <data key="OtfVersion">6.4.0.42312</data>
  </metaData>
  <declarations>
    <variable name="IntegerDocVar1" id="DocumentVariableDeclaration_05695bdac6de4ab0a1c79dcfe9a4cdc8">
      <realisation>
        <dataType xsi:type="Integer">
          <init value="9223372036854775805" />
        </dataType>
      </realisation>
    </variable>
    <constant name="GlobalConstant1_True" id="GlobalConstantDeclaration_c0af70859cae45b8b9672c39f90a1aa0">
      <realisation>
        <dataType xsi:type="Boolean">
          <init value="true" />
        </dataType>
      </realisation>
    </constant>
    <context name="ContextVariable1_False" id="ContextVariableDeclaration_ae9604f7119641d6bd83468224ee6d6a">
      <realisation>
        <dataType xsi:type="Boolean">
          <init value="false" />
        </dataType>
      </realisation>
    </context>
  </declarations>
  <validities>
    <validity name="Validity1_False" id="Validity_ddb5d381182c4aad998ec61d390d409b">
      <realisation xsi:type="BooleanLiteral" value="false" />
    </validity>
  </validities>
  <signatures>
    <signature name="ProcSigNotImpl1" id="Signature_a9b2a71635a34c2384547d187e695f2a" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature">
        <parameters>
          <inParam name="IntegerInParameter1" id="InParameterDeclaration_9ec41b542dff4c7c9cb8c7e82951bfa3">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <inParam name="IntegerInParameter2" id="InParameterDeclaration_3f2a0309e5f34be09e4246de5c41a14e">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <inoutParam name="IntegerInOutParameter1" id="InOutParameterDeclaration_e02d3d276f6544399d9fd6c5ca2b99a6">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inoutParam>
          <inoutParam name="IntegerInOutParameter2" id="InOutParameterDeclaration_6e776c424f4e4bb0975b1e3cf4f8fc3e">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
          <outParam name="IntegerOutParameter1" id="OutParameterDeclaration_657c0e4f7de747baaf40763f211deae9">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="IntegerOutParameter2" id="OutParameterDeclaration_000b2928aa804bea85215ff0066b0795">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
      </realisation>
    </signature>
    <signature name="ProcSigImplByProcNoParam1" id="Signature_3e88f9821fbb43fd8466bb42b434713f">
      <realisation xsi:type="ProcedureSignature" />
    </signature>
    <signature name="SignatureNoRealization1" id="Signature_607c71a427c549b5b51f47d66c24ec48" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature" />
    </signature>
    <signature name="ProcSigImplByProcWithParams1" id="Signature_4f1a0f84a67a49838822322e3421c394" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature">
        <parameters>
          <inParam name="IntegerInParameter1" id="InParameterDeclaration_2e086fc11b72485aa2aafd704978bd4b">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="IntegerOutParameter1" id="OutParameterDeclaration_ca6edb704058482580b0e1eea2c4394c">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <inParam name="IntegerInParameter2" id="InParameterDeclaration_7a714037e8d14726bce77676be6ae18a">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="IntegerOutParameter2" id="OutParameterDeclaration_4f9607626b5d49a3ba403b04fef710b3">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
      </realisation>
    </signature>
    <signature name="ProcSigTestAmbiguousCall1" id="Signature_8985df094c734f86a7e7d6beac8f4e92" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature">
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_b1f7bed40a4c4a7992fab12711aefc67">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_fe5da21daf58412bba82a1a3b09076f1">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_bfffb50a85534e929cc7140685ed3505">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
      </realisation>
    </signature>
    <signature name="ProcSigTestAmbiguousCall2" id="Signature_0d759bce795f4a59a4dfe8a2fea8721d" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature">
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_1fa9dc4b6c9c4544bbab9b74385da691">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_6143ea375a98471e84aeaf974d2fded8">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_6fcd285b8c7848cb9418cad12e11daa7">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
      </realisation>
    </signature>
    <signature name="ProcSigTestAmbiguousCall3" id="Signature_726c65f5f36640e2869121976bbe7e0f" visibility="PUBLIC">
      <realisation xsi:type="ProcedureSignature">
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_606fb7f174014d78b6730bd6891bf116">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_656c578ea5504417a6f1cb5323cf0ea5">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_085071f289fd4d6fa8cef90219023b1e">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
      </realisation>
    </signature>
  </signatures>
  <procedures>
    <procedure name="ProcedureNoRealization" id="Procedure_a5313facbfdd4aabac7248e2d276c2eb" visibility="PUBLIC" />
    <procedure name="ProcedureWithoutParams" id="Procedure_b9907029c0924390b766c136ef193fc8" visibility="PUBLIC">
      <realisation>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestInParam_OmitInParamWithInit" id="Procedure_369f57d6072445f28f59aabbe208bdec" visibility="PUBLIC">
      <specification>The caller may omit input arguments if there's an initial value defined for the in-parameter.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inParam name="InParam1" id="InParameterDeclaration_83e6273eafa04ae19a770809868c0e0d">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestInParam_InParamInitIsUsed" id="Procedure_4d8724064f1c4d599e41ea14914eec1c" visibility="PUBLIC">
      <specification>This initial values of the in-parameters will apply in place of the missing argument.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inParam name="InParam1" id="InParameterDeclaration_27546f83cec04714b8a1c2dd82e77e71">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <inParam name="InParam2" id="InParameterDeclaration_44863d0eafd245919ad95798fdbe1ab9">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <outParam name="OutParam1" id="OutParameterDeclaration_ca6daebfd9514cdf8fcd548b111b415d">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_9ae1105f78a44eb59ab27121fb73ae55">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_efa45a2419614192853169a6ae9e02c5">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam1" />
              <term xsi:type="IntegerValue" valueOf="InParam1" />
            </realisation>
          </action>
          <action id="Action_9241316822a64321a08cf40190fdd27c">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam2" />
              <term xsi:type="IntegerValue" valueOf="InParam2" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestInParam_ReceiveOnly_NotReturn_Caller" id="Procedure_c36a723d4090404daf30b92496ba903e" visibility="PUBLIC">
      <specification>The InParam can only receive value, it can not return value.</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_39eb0e7a332a4af4b3af826bd718ac45">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_756ec735fbc94326a5ebc9e7f4a2efeb">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_4d7f0f49bce3452ca1c74850e81e5b0d">
            <realisation xsi:type="ProcedureCall" procedure="TestInParam_ReceiveOnly_NotReturn_Callee">
              <arguments>
                <inArg param="InParam1">
                  <term xsi:type="IntegerValue" valueOf="OutParam1" />
                </inArg>
                <outArg param="OutParam1">
                  <variable xsi:type="IntegerVariable" name="OutParam2" />
                </outArg>
              </arguments>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestInParam_ReceiveOnly_NotReturn_Callee" id="Procedure_24df1b842a194960a4df2fc7ed82637a" visibility="PUBLIC">
      <specification>The InParam can only receive value, it can not return value.</specification>
      <realisation>
        <parameters>
          <inParam name="InParam1" id="InParameterDeclaration_b43e20f1f9b7455092bf137062ddaddd">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <outParam name="OutParam1" id="OutParameterDeclaration_60999f7f0d1b453899bfc7e4aa7e089b">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestInOutParam_OmitInOutParamWithInit" id="Procedure_75af565fcf0e42d7b0882a61697a86bf" visibility="PUBLIC">
      <specification>The caller may omit input arguments if there's an initial value defined for the inOut-parameter.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inoutParam name="InOutParam1" id="InOutParameterDeclaration_ca60a87943944301842fcfba54db06d2">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestInOutParam_InOutParamInitIsUsed" id="Procedure_3007b5a6f2554fc69131243d1507b280" visibility="PUBLIC">
      <specification>This initial values of the inOut-parameters will apply in place of the missing argument.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inoutParam name="InOutParam1" id="InOutParameterDeclaration_0905ce7d20e049d194fbe25314cce377">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
          <inoutParam name="InOutParam2" id="InOutParameterDeclaration_ad069edb2c034daeba43b246d159cd74">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
          <outParam name="OutParam1" id="OutParameterDeclaration_2e279deaf8dd4bcb99a31900c78b0b0c">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_7238bf1f3fbb4e249f9a0bca03dd3136">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_27a07337a3f943e0b030287614e3af08">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam1" />
              <term xsi:type="IntegerValue" valueOf="InOutParam1" />
            </realisation>
          </action>
          <action id="Action_ac2374d6e3424559bd3b4ca5594279b2">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam2" />
              <term xsi:type="IntegerValue" valueOf="InOutParam2" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestInOutParam_OutputValueAsync" id="Procedure_f12aaa173f0840f99b5bbbc32913b0f9" visibility="PUBLIC">
      <specification>Arguments for in&amp;output parameters shall be passed by reference. This means that any change to the parameter value is visible to the caller also.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inoutParam name="InOutParam1" id="InOutParameterDeclaration_95c5497367ee427283e9b808c68183b7">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
        </parameters>
        <flow>
          <action id="Action_7c800a78172b471cadf3fe3ec04ad711">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="InOutParam1" />
              <term xsi:type="IntegerLiteral" value="123" />
            </realisation>
          </action>
          <action id="Action_d55ce08c36a649658158ca85b8a94a82">
            <metaData>
              <data key="EmotiveActivity">SleepActivity</data>
            </metaData>
            <realisation xsi:type="event:WaitForEvent">
              <event:source xsi:type="event:TimerExpiredEventSource">
                <event:timeout xsi:type="IntegerLiteral" value="500" />
              </event:source>
            </realisation>
          </action>
          <loop name="ForLoop1" id="Loop_830cdb7a066342078e8a388ff19e1346">
            <realisation>
              <configuration id="LoopConfigurationHeader_a0e53f2b44ae454781c7b7516548c01d">
                <realisation xsi:type="ForLoop">
                  <counter name="InOutParam1" />
                  <start xsi:type="IntegerLiteral" value="0" />
                  <end xsi:type="IntegerLiteral" value="9" />
                </realisation>
              </configuration>
              <flow>
                <action id="Action_ed7c137813a34139908c2e1702f4bb72">
                  <metaData>
                    <data key="EmotiveActivity">SleepActivity</data>
                  </metaData>
                  <realisation xsi:type="event:WaitForEvent">
                    <event:source xsi:type="event:TimerExpiredEventSource">
                      <event:timeout xsi:type="IntegerLiteral" value="500" />
                    </event:source>
                  </realisation>
                </action>
              </flow>
            </realisation>
          </loop>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestInOutParam_InputValueAsync" id="Procedure_4ef359ed49144264a8b49d780d42394d" visibility="PUBLIC">
      <specification>Arguments for in&amp;output parameters shall be passed by reference. This means that any change to the parameter value is visible to the caller also.
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inoutParam name="InOutParam1" id="InOutParameterDeclaration_3b17541050ff4041a2522aa26c3e3444">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
          <inoutParam name="InOutParam2" id="InOutParameterDeclaration_e68ca690000f4548b00c93367642ac94">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
        </parameters>
        <declarations>
          <variable name="Counter1" id="VariableDeclaration_43dad28c368345f1a0b65735408401bc">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </variable>
        </declarations>
        <flow>
          <action id="Action_fad459dbcb8045878f2d67dfa4f90e96">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="InOutParam2" />
              <term xsi:type="IntegerValue" valueOf="InOutParam1" />
            </realisation>
          </action>
          <action id="Action_c873a4129aa741289ec1c0bf66fe73a7">
            <metaData>
              <data key="EmotiveActivity">SleepActivity</data>
            </metaData>
            <realisation xsi:type="event:WaitForEvent">
              <event:source xsi:type="event:TimerExpiredEventSource">
                <event:timeout xsi:type="IntegerLiteral" value="500" />
              </event:source>
            </realisation>
          </action>
          <loop name="ForLoop1" id="Loop_42d52129b70f4325b0907cebb4098bc3">
            <realisation>
              <configuration id="LoopConfigurationHeader_cb91860f05f24e21b76e39d2f796aedd">
                <realisation xsi:type="ForLoop">
                  <counter name="Counter1" />
                  <start xsi:type="IntegerLiteral" value="0" />
                  <end xsi:type="IntegerLiteral" value="9" />
                </realisation>
              </configuration>
              <flow>
                <action id="Action_dde0e80c9c654c9c9cb1133277585bf3">
                  <metaData>
                    <data key="EmotiveActivity">SleepActivity</data>
                  </metaData>
                  <realisation xsi:type="event:WaitForEvent">
                    <event:source xsi:type="event:TimerExpiredEventSource">
                      <event:timeout xsi:type="IntegerLiteral" value="500" />
                    </event:source>
                  </realisation>
                </action>
                <action id="Action_2c07746b1dce4941a0d1eb4ab3ac4c8c">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="IntegerVariable" name="InOutParam2" />
                    <term xsi:type="IntegerValue" valueOf="InOutParam1" />
                  </realisation>
                </action>
              </flow>
            </realisation>
          </loop>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_OmitOutParamFreely" id="Procedure_6ca4ea8cb897495ba5b4811f5c55a8b2" visibility="PUBLIC">
      <specification>The caller may omit output arguments freely (e.g. in the case when there is no interest in one of the returned data).
(ISO_WD_13209-2, 7.11.3, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_2f89196e9ead48efbe687f6eb7775b6e">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_71d00971a9a74708b43f14c99a6a58d1">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestOutParam_OutParamNoInitNoChanges" id="Procedure_fee936b176384cef973072c5cff25981" visibility="PUBLIC">
      <specification>If the (called) procedure does never change (e.g. assignment of a new value or modification of an existing value, including deep changes on complex values)  a declared output parameter and there is no explicit initial value defined for it, the output argument variable stays unchanged.
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_584f29dc80164021947606bd0e3e91b7">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestOutParam_NoReturnBecauseOfException1" id="Procedure_a050140845134955af684bf4b6b52ba1" visibility="PUBLIC">
      <specification>If the procedure throws an exception the output parameter stays unchanged.
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_02c091a7c0804bfb89bc1a1a45ec2196">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <throw id="Throw_273d78bcadeb4c98a3c58c757fa4bd75">
            <realisation xsi:type="UserExceptionCreate">
              <qualifier xsi:type="StringLiteral" value="ExceptionQualifier1" />
              <text xsi:type="StringLiteral" value="Exception description text" />
            </realisation>
          </throw>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_NoReturnBecauseOfException2" id="Procedure_847358e78fd84d38bddd179d395bf69c" visibility="PUBLIC">
      <specification>If the procedure throws an exception the output parameter stays unchanged.
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_1080d54535b54e408f57a0c6b2548948">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <parallel id="Parallel_0f03db86e24847b5b832408f044ceae5">
            <realisation>
              <lane>
                <loop name="ForLoop1" id="Loop_920da8de7c73493481b1e01562061d9b">
                  <realisation>
                    <configuration id="LoopConfigurationHeader_bd38ee9619c44ee6a0851caebec2d885">
                      <realisation xsi:type="ForLoop">
                        <counter name="OutParam1" />
                        <start xsi:type="IntegerLiteral" value="0" />
                        <end xsi:type="IntegerLiteral" value="9" />
                      </realisation>
                    </configuration>
                    <flow>
                      <action id="Action_37dfa53aa947438793e15aa143ae2629">
                        <metaData>
                          <data key="EmotiveActivity">SleepActivity</data>
                        </metaData>
                        <realisation xsi:type="event:WaitForEvent">
                          <event:source xsi:type="event:TimerExpiredEventSource">
                            <event:timeout xsi:type="IntegerLiteral" value="500" />
                          </event:source>
                        </realisation>
                      </action>
                    </flow>
                  </realisation>
                </loop>
              </lane>
              <lane>
                <action id="Action_9fd9a56fd1154ca492fe783a80512203">
                  <metaData>
                    <data key="EmotiveActivity">SleepActivity</data>
                  </metaData>
                  <realisation xsi:type="event:WaitForEvent">
                    <event:source xsi:type="event:TimerExpiredEventSource">
                      <event:timeout xsi:type="IntegerLiteral" value="2000" />
                    </event:source>
                  </realisation>
                </action>
                <throw id="Throw_c3806cd0b9fc4e5b8812591a0b1a5a3e">
                  <realisation xsi:type="UserExceptionCreate">
                    <qualifier xsi:type="StringLiteral" value="ExceptionQualifier1" />
                    <text xsi:type="StringLiteral" value="Exception description text" />
                  </realisation>
                </throw>
              </lane>
            </realisation>
          </parallel>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_NoReturnBecauseProcValidForFalse" id="Procedure_70f2c10dcef14c348174349083996881" visibility="PUBLIC" validFor="ContextVariable1_False">
      <specification>In the direct case, if the procedure is not valid, nothing is executed (NOP).
(ISO_WD_13209-2, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_37ac09cdffe0417b9d282330b949fa13">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_1f4884927df84d099c632a80b560e701">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_33a98d689cb2485f9396a16fc5570148">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam2" />
              <term xsi:type="IntegerLiteral" value="100" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_ReturnInitOrChangedValue1" id="Procedure_17c43fbf90e742ef801bb7d1723b1b10" visibility="PUBLIC">
      <specification>If the parameter has an explicit initial value, or the procedure writes it, the value will be assigned to the corresponding output argument variable.
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_804c7a9097c94d5c8e38c7e5f7a36954">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_1afd45a78d874f1f872e43f0373a0f9d">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_b2dd1767e4eb499a8afec0989194c103">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam2" />
              <term xsi:type="IntegerLiteral" value="12" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_ReturnInitOrChangedValue2" id="Procedure_0d2d91b277804b5f95084c50959cfb04" visibility="PUBLIC">
      <specification>If the parameter has an explicit initial value, or the procedure writes it, the value will be assigned to the corresponding output argument variable.
Test deep change on a complex value.
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_ce83f8eaa4f04e5081ff2cf5d69223b8">
            <realisation>
              <dataType xsi:type="ByteField">
                <init value="00" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_be18c7cf7d85494e816d9ac5a346e68a">
            <realisation xsi:type="SetBit">
              <byteField name="OutParam1" />
              <index xsi:type="IntegerLiteral" value="0" />
              <position xsi:type="IntegerLiteral" value="0" />
              <value xsi:type="BooleanLiteral" value="true" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_ReturnInitOrChangedValue3" id="Procedure_d8d5ee6686184536b00348bab2bc5d23" visibility="PUBLIC">
      <specification>If the parameter has an explicit initial value, or the procedure writes it, the value will be assigned to the corresponding output argument variable.
(This rule is also applicable where a procedure is terminated as a result of TerminateLanes).
(ISO_WD_13209-2, 7.11.3)</specification>
      <realisation>
        <parameters>
          <outParam name="OutParam1" id="OutParameterDeclaration_c764df5f3c1945119af642f8a05d51a7">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <loop name="ForLoop1" id="Loop_7503f28de8e34bb5a8118abc097b9332">
            <realisation>
              <configuration id="LoopConfigurationHeader_5462591ac9d743468346005c15d2fb9c">
                <realisation xsi:type="ForLoop">
                  <counter name="OutParam1" />
                  <start xsi:type="IntegerLiteral" value="0" />
                  <end xsi:type="IntegerLiteral" value="9" />
                </realisation>
              </configuration>
              <flow>
                <action id="Action_90db7d1263154994b2452b1105c1e040">
                  <metaData>
                    <data key="EmotiveActivity">SleepActivity</data>
                  </metaData>
                  <realisation xsi:type="event:WaitForEvent">
                    <event:source xsi:type="event:TimerExpiredEventSource">
                      <event:timeout xsi:type="IntegerLiteral" value="500" />
                    </event:source>
                  </realisation>
                </action>
              </flow>
            </realisation>
          </loop>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_NotReceive_ReturnOnly" id="Procedure_78cc5f2ccd7843d99010e2b65ca13a38" visibility="PUBLIC">
      <specification>The OutParam can not receive value, it can only return value.</specification>
      <realisation>
        <parameters>
          <inParam name="InParam1" id="InParameterDeclaration_da1ac1f26f304b69b0e8af0bdfe7c3cc">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <outParam name="OutParam1" id="OutParameterDeclaration_569ddff00edd4d9e9de17f55e2220ae2">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </outParam>
          <outParam name="OutParam2" id="OutParameterDeclaration_7c52150dd9c74aef80f6c9c82c3ca3fa">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_9bf9d4e3bde04a3dbb05f82aac6182d2">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam2" />
              <term xsi:type="Add">
                <numeral xsi:type="IntegerValue" valueOf="InParam1" />
                <numeral xsi:type="IntegerValue" valueOf="OutParam1" />
              </term>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestOutParam_CanNotReturnChangesBeforeProcTermination" id="Procedure_cd94502889214b5293e53c270071ae6b" visibility="PUBLIC">
      <specification>The writing-back of the returned parameter value into the argument variable shall not happen until termination of the called procedure.
(ISO_WD_13209-2, 7.14.5.3)</specification>
      <realisation>
        <parameters>
          <inParam name="InParam1" id="InParameterDeclaration_0dfe597dbb224e97b590f849e0f899c2">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inParam>
          <outParam name="OutParam1" id="OutParameterDeclaration_2224136896434d249030572169e5e321">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <inoutParam name="InOutParam1" id="InOutParameterDeclaration_1c005b2a439943a89be118963e2413e0">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="4" />
              </dataType>
            </realisation>
          </inoutParam>
        </parameters>
        <flow>
          <action id="Action_286bbacc9ada427d80a610b67f3f3018">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam1" />
              <term xsi:type="IntegerValue" valueOf="InParam1" />
            </realisation>
          </action>
          <action id="Action_c1d062c3a7aa4738b16e9d808e7a4b21">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="InOutParam1" />
              <term xsi:type="IntegerValue" valueOf="InParam1" />
            </realisation>
          </action>
          <action id="Action_e5a2c8dcd8ce493cb152a1f4c7876d8c">
            <metaData>
              <data key="EmotiveActivity">SleepActivity</data>
            </metaData>
            <realisation xsi:type="event:WaitForEvent">
              <event:source xsi:type="event:TimerExpiredEventSource">
                <event:timeout xsi:type="IntegerLiteral" value="5000" />
              </event:source>
            </realisation>
          </action>
          <action id="Action_b70b55c9ba1e4ed79b08dccd1219fa56">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParam1" />
              <term xsi:type="IntegerValue" valueOf="InParam1" />
            </realisation>
          </action>
          <action id="Action_7dc4babc1ffc434084a99e9f2238b0af">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="InOutParam1" />
              <term xsi:type="IntegerValue" valueOf="InParam1" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="TestUnitializedArgOfInParam" id="Procedure_febbb371e4104e088a27ea723172942e" visibility="PUBLIC">
      <realisation>
        <parameters>
          <inParam name="ExceptionInOutParam" id="InParameterDeclaration_c860e3abf697420ca246781377087740">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </inParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestUnitializedArgOfInOutParam" id="Procedure_828f26a72cc9446db4a83ebfc19cbf10" visibility="PUBLIC">
      <realisation>
        <parameters>
          <inoutParam name="ExceptionInOutParam" id="InOutParameterDeclaration_4c68085020de4d21add3f7f485e748b1">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </inoutParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="TestUnitializedArgOfOutParam" id="Procedure_8543c3da4b914cbfb7bf90ff68009d49" visibility="PUBLIC">
      <realisation>
        <parameters>
          <outParam name="ExceptionInOutParam" id="OutParameterDeclaration_6978ebb3d87040a0992e33d74b7643f7">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </outParam>
        </parameters>
        <flow />
      </realisation>
    </procedure>
    <procedure name="ProcedureWithParams1" id="Procedure_3cd32ffd26df4f73a6a6236d8cf50738" visibility="PUBLIC" implements="ProcSigImplByProcWithParams1">
      <realisation>
        <parameters>
          <inParam name="IntegerInParameter1" id="InParameterDeclaration_002089ccaf4842e4a1537d992225030f">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="IntegerOutParameter1" id="OutParameterDeclaration_32fef3e0e98c4c6eb5286e748d906e49">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <inParam name="IntegerInParameter2" id="InParameterDeclaration_13852cdf838b4ab28d122204a4e11aee">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="IntegerOutParameter2" id="OutParameterDeclaration_bbbecdabf91343aaaaa4e8e114ea2eb0">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_07d46555f71d43908dbde3402f7cae1f">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerOutParameter1" />
              <term xsi:type="IntegerValue" valueOf="IntegerInParameter1" />
            </realisation>
          </action>
          <action id="Action_0b1e0e91aaba4152a20952e57eda6e57">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerOutParameter2" />
              <term xsi:type="IntegerValue" valueOf="IntegerInParameter2" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcedureWithParams2" id="Procedure_b4d58a1f9d974d61ae8ab1994a694a41" visibility="PUBLIC">
      <realisation>
        <parameters>
          <inParam name="IntegerInParameter1" id="InParameterDeclaration_e0fcd03bbaae4919bccf185fb55140d0">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <inoutParam name="IntegerInOutParameter1" id="InOutParameterDeclaration_68d041d3423b4f7797aa2bd39f03515a">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inoutParam>
          <outParam name="IntegerOutParameter1" id="OutParameterDeclaration_07e183c9cd9547b09dd8c39227b880dd">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="IntegerOutParameter2" id="OutParameterDeclaration_f74d9dd9959d4d8faf9f7b3f2e7ff611">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <inParam name="UnusedIntegerInParameter1" id="InParameterDeclaration_62704e644c7544fe85076e5a1cda1a0b">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="1" />
              </dataType>
            </realisation>
          </inParam>
          <inoutParam name="UnusedIntegerInOutParameter1" id="InOutParameterDeclaration_1170bbcb5b3a4a25b094136496600ae7">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="1" />
              </dataType>
            </realisation>
          </inoutParam>
          <outParam name="UnusedIntegerOutParameter1" id="OutParameterDeclaration_888b88b98826404382192e23b93dc057">
            <realisation>
              <dataType xsi:type="Integer">
                <init value="1" />
              </dataType>
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_f46bd8f66b6c48759fa4b39ba73607dd">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerInOutParameter1" />
              <term xsi:type="IntegerValue" valueOf="IntegerInParameter1" />
            </realisation>
          </action>
          <action id="Action_c739d272e3f84d959bd341a5193f1ee6">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerOutParameter1" />
              <term xsi:type="Add">
                <numeral xsi:type="IntegerValue" valueOf="IntegerOutParameter2" />
                <numeral xsi:type="IntegerValue" valueOf="IntegerInOutParameter1" />
              </term>
            </realisation>
          </action>
          <action id="Action_dc1920d862564cccb0bf2ac88edd3065">
            <metaData>
              <data key="EmotiveActivity">SleepActivity</data>
            </metaData>
            <realisation xsi:type="event:WaitForEvent">
              <event:source xsi:type="event:TimerExpiredEventSource">
                <event:timeout xsi:type="IntegerLiteral" value="5000" />
              </event:source>
            </realisation>
          </action>
          <action id="Action_585a3acdc3e64755b836e1f7dc02594f">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerInOutParameter1" />
              <term xsi:type="Add">
                <numeral xsi:type="IntegerValue" valueOf="IntegerInOutParameter1" />
                <numeral xsi:type="IntegerLiteral" value="1" />
              </term>
            </realisation>
          </action>
          <action id="Action_6b23cf5a5bee4125812b331bafb04597">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="IntegerOutParameter1" />
              <term xsi:type="IntegerValue" valueOf="IntegerInOutParameter1" />
            </realisation>
          </action>
          <action id="Action_466d4fe78e1449baa3612fc963ccc4dd">
            <metaData>
              <data key="EmotiveActivity">SleepActivity</data>
            </metaData>
            <realisation xsi:type="event:WaitForEvent">
              <event:source xsi:type="event:TimerExpiredEventSource">
                <event:timeout xsi:type="IntegerLiteral" value="5000" />
              </event:source>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcTestAmbiguousCall_B1" id="Procedure_2628e1f848674cf7a3b23698699322a3" visibility="PUBLIC" implements="ProcSigTestAmbiguousCall1" validFor="Validity1_False">
      <realisation>
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_3cf7987d107a408cb4eef33e445bb245">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_204ef96d325540e48e72abd0da867004">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_e1ea7922a5174819aab6a9994cd9739d">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_e33bdc2d112d430488412be8f65152f4">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParameter1" />
              <term xsi:type="IntegerValue" valueOf="InParameter1" />
            </realisation>
          </action>
          <action id="Action_b5c7bde6a08447a8ad37ed1eea8bc9cf">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="OutParameter2" />
              <term xsi:type="StringLiteral" value="ProcTestAmbiguousCall_B1" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcTestAmbiguousCall_B2" id="Procedure_458d5f9fb4d44b338bd5694a5f81f929" visibility="PUBLIC" implements="ProcSigTestAmbiguousCall1" validFor="GlobalConstant1_True">
      <realisation>
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_00d549c09a78430f959d5d22583f85d5">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_3644feea114749418aa0bee3ed7452a8">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_56c7df71eda140b3b7df9a81557c8548">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_f0a87ec9c48144f1868ae4d86292a6ff">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParameter1" />
              <term xsi:type="IntegerValue" valueOf="InParameter1" />
            </realisation>
          </action>
          <action id="Action_f931fb6e78284e08adf567090935cc11">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="OutParameter2" />
              <term xsi:type="StringLiteral" value="ProcTestAmbiguousCall_B2" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcTestAmbiguousCall_B3" id="Procedure_74d4b6a4f6844661b4e8d98c72052141" visibility="PUBLIC" implements="ProcSigTestAmbiguousCall2" validFor="Validity1_False">
      <realisation>
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_4a0e480b02164c37a93e591909410c75">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_29b402abcb8947c48d57320a452df45b">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_55ab4e0cd8294b2fb5f223c7d1208962">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_b06fd54d6d784740b0c6875fff7b8443">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParameter1" />
              <term xsi:type="IntegerValue" valueOf="InParameter1" />
            </realisation>
          </action>
          <action id="Action_7366bbfa35c94928ad54fccbaeaea436">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="OutParameter2" />
              <term xsi:type="StringLiteral" value="ProcTestAmbiguousCall_B3" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcTestAmbiguousCall_B4" id="Procedure_90e58a436c854968b51c9e51677359e4" visibility="PUBLIC" implements="ProcSigTestAmbiguousCall2" validFor="ContextVariable1_False">
      <realisation>
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_f260f9ac559246389a27e21bf75e4e5f">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_4b3154ee8461406f9c4af5a8e09c4b28">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_28bc801ff52742279118ab47956d2514">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_3d1cae9f73784f96886011af47c2f615">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParameter1" />
              <term xsi:type="IntegerValue" valueOf="InParameter1" />
            </realisation>
          </action>
          <action id="Action_4f6434f674c5416b9338d9d251e517dc">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="OutParameter2" />
              <term xsi:type="StringLiteral" value="ProcTestAmbiguousCall_B4" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcTestAmbiguousCall_B5" id="Procedure_79e8bbe595584ec4a674ded5e2e335e1" visibility="PUBLIC" implements="ProcSigTestAmbiguousCall3" validFor="Validity1_False">
      <realisation>
        <parameters>
          <inParam name="InParameter1" id="InParameterDeclaration_ecb57f384ebc4ad9b99640967b209a1d">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </inParam>
          <outParam name="OutParameter1" id="OutParameterDeclaration_159cc21b5d3d4c56ba048c4e32976985">
            <realisation>
              <dataType xsi:type="Integer" />
            </realisation>
          </outParam>
          <outParam name="OutParameter2" id="OutParameterDeclaration_7102fa195db94814a08e155b51db4c9d">
            <realisation>
              <dataType xsi:type="String" />
            </realisation>
          </outParam>
        </parameters>
        <flow>
          <action id="Action_886a499e57044d68b00df8791e1c464d">
            <realisation xsi:type="Assignment">
              <result xsi:type="IntegerVariable" name="OutParameter1" />
              <term xsi:type="IntegerValue" valueOf="InParameter1" />
            </realisation>
          </action>
          <action id="Action_0fa1deab65c7465fa210ecc33dc56220">
            <realisation xsi:type="Assignment">
              <result xsi:type="StringVariable" name="OutParameter2" />
              <term xsi:type="StringLiteral" value="ProcTestAmbiguousCall_B4" />
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace1" id="Procedure_01b942b228374452b4e310135abe1a56" visibility="PUBLIC">
      <realisation>
        <declarations>
          <variable name="Exception1" id="VariableDeclaration_ab1a31a6ee3b471b837a006560763545">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_5b9105d6d4b740f19e89ecb5eae92055">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="String" />
              </dataType>
            </realisation>
          </variable>
        </declarations>
        <flow>
          <handler id="Handler_c524941c65054bef90de65b019cf4a90">
            <realisation>
              <try>
                <action id="Action_9fce91bf934a49189c0b227f702616c5">
                  <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace11" />
                </action>
              </try>
              <catch>
                <exception id="CatchHeader_61f5942c0f3a404498a15fea12e202f3">
                  <realisation>
                    <type />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow />
              </catch>
              <finally>
                <action id="Action_df570591628244f7bf51272bef4f6d22">
                  <realisation xsi:type="Assignment">
                    <result xsi:type="ListVariable" name="List1" />
                    <term xsi:type="GetStackTrace">
                      <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                    </term>
                  </realisation>
                </action>
              </finally>
            </realisation>
          </handler>
          <action id="Action_ed4d45405ea94890995e383f1b46a4e4">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="util:Compare">
                <util:term xsi:type="ListValue" valueOf="List1" />
                <util:term xsi:type="ListLiteral">
                  <itemType xsi:type="String" />
                  <items>
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.ProcedureThrowException" />
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace12" />
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace11" />
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace1" />
                  </items>
                </util:term>
              </assert:condition>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace11" id="Procedure_1a691b63d4474b9f8967de6da808ea40">
      <realisation>
        <flow>
          <action id="Action_3b3927dea52e43a8b641268a2ff11aab">
            <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace12" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace12" id="Procedure_7722358ba763466b8a2fd250e283aabb">
      <realisation>
        <flow>
          <action id="Action_17b57122766f4b718c08a7a747f357d5">
            <realisation xsi:type="ProcedureCall" procedure="ProcedureWithUserException" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace2" id="Procedure_0d6d289255394b4bb3b5cf18f2b6e53f" visibility="PUBLIC">
      <realisation>
        <flow>
          <action id="Action_c78fcac9ce2941028a9f9d0398f96ad3">
            <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace21" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace21" id="Procedure_a497388340bc4aa6886646dd1436da9e">
      <realisation>
        <declarations>
          <variable name="Exception1" id="VariableDeclaration_a95d84b6922f46c5a4878688c0f77cbf">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_ecfeff450fbd43f19d15c2abe29b9de8">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="String" />
              </dataType>
            </realisation>
          </variable>
        </declarations>
        <flow>
          <handler id="Handler_3c1ec26042d642fa96b96cbc2b5a6372">
            <realisation>
              <try>
                <action id="Action_27934e4a25ed448698dbb24e06f0cbf2">
                  <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace22" />
                </action>
              </try>
              <catch>
                <exception id="CatchHeader_233dc6d47fa04b558e2abb8b80954729">
                  <realisation>
                    <type />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_64e1c44685e44dcb8686eebb11632fca">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="ListVariable" name="List1" />
                      <term xsi:type="GetStackTrace">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <finally />
            </realisation>
          </handler>
          <action id="Action_bebb604e1ffb4f08a6a669f932105611">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="util:Compare">
                <util:term xsi:type="ListValue" valueOf="List1" />
                <util:term xsi:type="ListLiteral">
                  <itemType xsi:type="String" />
                  <items>
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.ProcedureThrowException" />
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace22" />
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace21" />
                  </items>
                </util:term>
              </assert:condition>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace22" id="Procedure_a8da342130b54f0ca57b42bd1109b624">
      <realisation>
        <flow>
          <action id="Action_f9d3ebd5d884447296f9fc4a4aa5ee2c">
            <realisation xsi:type="ProcedureCall" procedure="ProcedureWithUserException" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace3" id="Procedure_f5cfad7f22e64c66bca2301fb493e361" visibility="PUBLIC">
      <realisation>
        <flow>
          <action id="Action_33ae9d3428b0467cb6fedb20a9367c6b">
            <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace31" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace31" id="Procedure_c5569ecf6e6740ad81f6d734c53e2568">
      <realisation>
        <flow>
          <action id="Action_22740be39d684d8a9f6013ebda3bdf41">
            <realisation xsi:type="ProcedureCall" procedure="CheckGetStackTrace32" />
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="CheckGetStackTrace32" id="Procedure_5c68ad0fe8c34c25895f2e859cae16ea">
      <realisation>
        <declarations>
          <variable name="Exception1" id="VariableDeclaration_ad7a2c986cfe4e23998dc6949e56d920">
            <realisation>
              <dataType xsi:type="Exception" />
            </realisation>
          </variable>
          <variable name="List1" id="VariableDeclaration_5246a1f734b74dfd8400550967a92059">
            <realisation>
              <dataType xsi:type="List">
                <itemType xsi:type="String" />
              </dataType>
            </realisation>
          </variable>
        </declarations>
        <flow>
          <handler id="Handler_66ac5a77293548dd9dffea73f2708644">
            <realisation>
              <try>
                <throw id="Throw_62327d17a1744a49ae873e080a9ff94c">
                  <realisation xsi:type="UserExceptionLiteral">
                    <qualifier value="ExceptionQualifier" />
                    <text value="ExceptionText" />
                  </realisation>
                </throw>
              </try>
              <catch>
                <exception id="CatchHeader_bf746559202345e98c6a93aa4c67ae18">
                  <realisation>
                    <type />
                    <handle name="Exception1" />
                  </realisation>
                </exception>
                <flow>
                  <action id="Action_55ea75f7171c4114be675f31980da544">
                    <realisation xsi:type="Assignment">
                      <result xsi:type="ListVariable" name="List1" />
                      <term xsi:type="GetStackTrace">
                        <exception xsi:type="ExceptionValue" valueOf="Exception1" />
                      </term>
                    </realisation>
                  </action>
                </flow>
              </catch>
              <finally />
            </realisation>
          </handler>
          <action id="Action_1c0ab8b7a9954dec871c5571ccc82e43">
            <realisation xsi:type="assert:Assert">
              <assert:condition xsi:type="util:Compare">
                <util:term xsi:type="ListValue" valueOf="List1" />
                <util:term xsi:type="ListLiteral">
                  <itemType xsi:type="String" />
                  <items>
                    <item xsi:type="StringLiteral" value="RootPackage1.Document1.CheckGetStackTrace32" />
                  </items>
                </util:term>
              </assert:condition>
            </realisation>
          </action>
        </flow>
      </realisation>
    </procedure>
    <procedure name="ProcedureWithUserException" id="Procedure_694e547c944f4469acd7e5f32a7741a1" visibility="PUBLIC">
      <realisation>
        <flow>
          <throw id="Throw_e1cf22b6e40e49549cc2d9e85ad230a7">
            <realisation xsi:type="UserExceptionLiteral">
              <qualifier value="ProcedureThrowException_Qualifier" />
              <text value="ProcedureThrowException_Text" />
            </realisation>
          </throw>
        </flow>
      </realisation>
    </procedure>
  </procedures>
</otx>